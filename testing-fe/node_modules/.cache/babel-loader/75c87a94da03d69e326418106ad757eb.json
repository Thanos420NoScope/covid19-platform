{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'; // import Camera from 'react-html5-camera-photo';\n\nimport { Camera } from 'react-cam'; // import Webcam from \"react-webcam\";\n\nimport PactContext from '../contexts/PactContext';\nimport AuthContext from '../contexts/AuthContext';\nimport DocInfo from './DocInfo';\nimport History from './History';\n\nvar hash = require('object-hash');\n\nconst Tabs = () => {\n  const pactContext = useContext(PactContext);\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n\n    fetchDoc();\n  }, []);\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n  const ages = [{\n    key: '0',\n    value: '0-10',\n    text: '0-10'\n  }, {\n    key: '1',\n    value: '11-20',\n    text: '11-20'\n  }, {\n    key: '2',\n    value: '21-30',\n    text: '21-30'\n  }, {\n    key: '3',\n    value: '41-50',\n    text: '41-50'\n  }, {\n    key: '4',\n    value: '51-60',\n    text: '51-60'\n  }, {\n    key: '5',\n    value: '61-70',\n    text: '61-70'\n  }, {\n    key: '6',\n    value: '71-80',\n    text: '71-80'\n  }, {\n    key: '7',\n    value: '81-90',\n    text: '81-90'\n  }, {\n    key: '8',\n    value: '91-100',\n    text: '91-100'\n  }];\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc));\n    setCanClick(true);\n    setShowCam(false);\n  }\n\n  const cam = useRef(null);\n\n  const camera = () => {\n    return React.createElement(Message, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Camera, {\n      showFocus: true,\n      front: false,\n      capture: capture,\n      ref: cam,\n      width: \"80%\",\n      height: \"auto\",\n      focusWidth: \"80%\",\n      focusHeight: \"60%\",\n      btnColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: img => cam.current.capture(img),\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 140,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Take Picture\")));\n  };\n\n  const panes = [{\n    menuItem: {\n      key: 'init',\n      icon: 'plus',\n      content: 'Init'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Administer COVID-19 Test\"), showQR ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      onError: e => console.log(e),\n      onScan: data => {\n        if (data) {\n          setSerial(data);\n          setshowQR(false);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 100,\n        marginTop: 5\n      },\n      onClick: () => setshowQR(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Close\")) : React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 240\n      },\n      onClick: () => setshowQR(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Show QR Scanner\"), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold',\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Test Serial Number\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Test Serial Number\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Scan QR code on test or enter number manually\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"240px\",\n        marginBottom: 3,\n        marginTop: 5\n      },\n      icon: \"hashtag\",\n      iconPosition: \"left\",\n      placeholder: \"Serial Number\",\n      value: serial,\n      onChange: e => setSerial(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold',\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Age Group\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Age Group\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Select the age range of the patient\"))), React.createElement(Select, {\n      style: {\n        width: \"240px\",\n        marginTop: 5\n      },\n      placeholder: \"Age Group\",\n      options: ages,\n      onChange: (e, {\n        value\n      }) => setAge(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold',\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Gender\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Select Gender of patient\")))), React.createElement(Radio, {\n      label: React.createElement(\"label\", {\n        style: {\n          color: \"#18A33C\",\n          marginRight: 10,\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Male\"),\n      name: \"radioGroup\",\n      value: \"kp\",\n      checked: sex === 'male',\n      onChange: () => setSex('male'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Radio, {\n      label: React.createElement(\"label\", {\n        style: {\n          color: \"#18A33C\",\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Female\"),\n      name: \"radioGroup\",\n      value: \"sig\",\n      checked: sex === 'female',\n      onChange: () => setSex('female'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Radio, {\n      label: React.createElement(\"label\", {\n        style: {\n          color: \"#18A33C\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Other\"),\n      name: \"radioGroup\",\n      value: \"sig\",\n      checked: sex === 'other',\n      onChange: () => setSex('other'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 240,\n        marginTop: 20\n      },\n      onClick: () => pactContext.initTest(age, sex, serial, {\n        publicKey: authContext.docInfo.public_key,\n        secretKey: authContext.docInfo.private_key\n      }, authContext.docInfo.uuid),\n      disabled: sex === \"\" || serial === \"\" || age === \"\",\n      loading: pactContext.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Administer Test\"))))))\n  }, {\n    menuItem: {\n      key: 'end',\n      icon: 'syringe',\n      content: 'Complete'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Record COVID-19 Test Result\"), showQR ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      onError: e => console.log(e),\n      onScan: data => {\n        if (data) {\n          setSerial(data);\n          setshowQR(false);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 100,\n        marginTop: 5\n      },\n      onClick: () => setshowQR(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Close\")) : React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 240\n      },\n      onClick: () => setshowQR(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Show QR Scanner\"), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Test Serial Number\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Test Serial Number\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Scan QR code on test or enter number manually\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"240px\",\n        marginBottom: 3,\n        marginTop: 5\n      },\n      icon: \"hashtag\",\n      iconPosition: \"left\",\n      placeholder: \"Serial Number\",\n      value: serial,\n      onChange: e => setSerial(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold',\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Upload Result Image\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Image\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Upload a picture of test result\"))), showCam ? camera() : React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 140,\n        marginTop: 5\n      },\n      onClick: () => setShowCam(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, canClick ? \"Take New\" : \"Take Picture\")), React.createElement(Form.Field, {\n      style: {\n        width: \"240px\",\n        margin: \"0 auto\",\n        marginTop: \"10px\",\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        fontWeight: 'bold',\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Result\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Result\"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Select positive or negative test result\")))), React.createElement(Radio, {\n      label: React.createElement(\"label\", {\n        style: {\n          color: \"#18A33C\",\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Positive\"),\n      name: \"radioGroup\",\n      value: \"kp\",\n      checked: res === 'positive',\n      onChange: () => setRes('positive'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(Radio, {\n      label: React.createElement(\"label\", {\n        style: {\n          color: \"#18A33C\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Negative\"),\n      name: \"radioGroup\",\n      value: \"sig\",\n      checked: res === 'negative',\n      onChange: () => setRes('negative'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 240,\n        marginTop: 20\n      },\n      onClick: () => pactContext.endTest(serial, imgHash, res === 'positive' ? true : false, {\n        publicKey: authContext.docInfo.public_key,\n        secretKey: authContext.docInfo.private_key\n      }, authContext.docInfo.uuid, imgBlob),\n      disabled: serial === \"\" || res === \"\" || !canClick,\n      loading: pactContext.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Post Test Result\"))))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'exchange',\n      content: 'History'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../assets/kadena-big.png\"),\n      style: {\n        height: 40,\n        marginTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Blockchain Transaction History\"), React.createElement(History, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'user md',\n      content: 'Info'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Doctor Information\"), React.createElement(DocInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }))))\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    panes: panes,\n    menu: {\n      color: 'blue',\n      attached: 'top'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }));\n};\n\nexport default Tabs; // <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QrReader","Camera","PactContext","AuthContext","DocInfo","History","hash","require","Tabs","pactContext","authContext","fetchDoc","fetchDocInfo","docUuid","showQR","setshowQR","serial","setSerial","age","setAge","sex","setSex","res","setRes","imgHash","setImgHash","imgBlob","setImgBlob","canClick","setCanClick","showCam","setShowCam","ages","key","value","text","capture","imgSrc","cam","camera","img","current","backgroundColor","color","width","marginTop","panes","menuItem","icon","content","render","marginBottom","e","console","log","data","margin","fontWeight","target","marginRight","initTest","publicKey","docInfo","public_key","secretKey","private_key","uuid","loading","endTest","height","attached"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'\n// import Camera from 'react-html5-camera-photo';\nimport { Camera } from 'react-cam';\n// import Webcam from \"react-webcam\";\nimport PactContext from '../contexts/PactContext'\nimport AuthContext from '../contexts/AuthContext'\nimport DocInfo from './DocInfo';\nimport History from './History'\n\nvar hash = require('object-hash');\n\n\nconst Tabs = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n    fetchDoc()\n  }, []);\n\n\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n\n  const ages = [\n      { key: '0', value: '0-10', text: '0-10' },\n      { key: '1', value: '11-20', text: '11-20' },\n      { key: '2', value: '21-30', text: '21-30' },\n      { key: '3', value: '41-50', text: '41-50' },\n      { key: '4', value: '51-60', text: '51-60' },\n      { key: '5', value: '61-70', text: '61-70' },\n      { key: '6', value: '71-80', text: '71-80' },\n      { key: '7', value: '81-90', text: '81-90' },\n      { key: '8', value: '91-100', text: '91-100' },\n    ]\n\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc))\n    setCanClick(true)\n    setShowCam(false);\n  }\n  const cam = useRef(null);\n\n  const camera = () => {\n    return (\n      <Message color=\"blue\">\n        <Fragment>\n          <Camera\n            showFocus={true}\n            front={false}\n            capture={capture}\n            ref={cam}\n            width=\"80%\"\n            height=\"auto\"\n            focusWidth=\"80%\"\n            focusHeight=\"60%\"\n            btnColor=\"white\"\n          />\n          <Button\n            onClick={img => cam.current.capture(img)}\n            style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 140,\n              marginTop: 10\n              }}\n          >\n            Take Picture\n          </Button>\n        </Fragment>\n      </Message>\n    )\n  }\n\n  const panes = [\n    { menuItem: { key: 'init', icon: 'plus', content: 'Init' }, render: () => <Tab.Pane>\n        <div>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Administer COVID-19 Test\n              </Message.Header>\n              {(showQR ?\n                <div>\n                  <QrReader\n                    onError={(e) => console.log(e)}\n                    onScan={(data) => {\n                      if (data) {\n                        setSerial(data);\n                        setshowQR(false);\n                      }\n                    }}\n                  />\n                  <Button\n                      style={{\n                        backgroundColor: \"#18A33C\",\n                        color: \"white\",\n                        width: 100,\n                        marginTop: 5\n                        }}\n                      onClick={() => setshowQR(false)}\n                    >\n                    Close\n                  </Button>\n                </div>\n                :\n                <Button\n                    style={{\n                      backgroundColor: \"#18A33C\",\n                      color: \"white\",\n                      width: 240,\n                      }}\n                    onClick={() => setshowQR(true)}\n                  >\n                  Show QR Scanner\n                </Button>\n              )}\n\n\n              <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n                <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 20}}>Test Serial Number\n                  <Popup\n                    trigger={\n                      <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                    }\n                    position='top center'\n                  >\n                    <Popup.Header>Test Serial Number</Popup.Header>\n                    <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n                  </Popup>\n                </label>\n                <div>\n                  <Input\n                    style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n                    icon='hashtag'\n                    iconPosition='left'\n                    placeholder='Serial Number'\n                    value={serial}\n                    onChange={(e) => setSerial(e.target.value)}\n                  />\n                </div>\n              </Form.Field>\n\n\n\n              <Form.Field style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\"}}>\n                <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Age Group\n                  <Popup\n                    trigger={\n                      <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                    }\n                    position='top center'\n                  >\n                    <Popup.Header>Age Group</Popup.Header>\n                    <Popup.Content>Select the age range of the patient</Popup.Content>\n                  </Popup>\n                </label>\n                <Select\n                  style={{width:\"240px\", marginTop: 5}}\n                  placeholder='Age Group'\n                  options={ages}\n                  onChange={(e, { value }) => setAge(value)}\n                />\n            </Form.Field>\n\n\n              <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n              <div>\n              <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Gender\n                <Popup\n                  trigger={\n                    <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                  }\n                  position='top center'\n                >\n                  <Popup.Header>Gender</Popup.Header>\n                  <Popup.Content>Select Gender of patient</Popup.Content>\n                </Popup>\n              </label>\n              </div>\n                <Radio\n                  label={\n                    <label style={{color: \"#18A33C\", marginRight: 10, marginTop: 5}}>Male\n                    </label>}\n                  name='radioGroup'\n                  value='kp'\n                  checked={sex === 'male'}\n                  onChange={() => setSex('male')}\n                  />\n                  <Radio\n                  label={\n                    <label style={{color: \"#18A33C\", marginRight: 10}}>Female\n                    </label>}\n                    name='radioGroup'\n                    value='sig'\n                    checked={sex === 'female'}\n                    onChange={() => setSex('female')}\n                  />\n                  <Radio\n                  label={\n                    <label style={{color: \"#18A33C\"}}>Other\n                    </label>}\n                    name='radioGroup'\n                    value='sig'\n                    checked={sex === 'other'}\n                    onChange={() => setSex('other')}\n                  />\n                  </Form.Field>\n                  <div>\n                    <Button\n                        style={{\n                          backgroundColor: \"#18A33C\",\n                          color: \"white\",\n                          width: 240,\n                          marginTop: 20\n                          }}\n                        onClick={() => pactContext.initTest(age, sex, serial, {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid)}\n                        disabled={(sex === \"\" || serial === \"\" || age === \"\")}\n                        loading={pactContext.loading}\n                      >\n                      Administer Test\n                    </Button>\n                  </div>\n            </Message>\n          </div>\n        </div>\n        </Tab.Pane> },\n\n\n\n\n\n        { menuItem: { key: 'end', icon: 'syringe', content: 'Complete' }, render: () => <Tab.Pane>\n        <div>\n        <div>\n        <Message>\n          <Message.Header style={{marginBottom: 10}}>\n            Record COVID-19 Test Result\n          </Message.Header>\n\n          {(showQR ?\n            <div>\n              <QrReader\n                onError={(e) => console.log(e)}\n                onScan={(data) => {\n                  if (data) {\n                    setSerial(data);\n                    setshowQR(false);\n                  }\n                }}\n              />\n              <Button\n                  style={{\n                    backgroundColor: \"#18A33C\",\n                    color: \"white\",\n                    width: 100,\n                    marginTop: 5\n                    }}\n                  onClick={() => setshowQR(false)}\n                >\n                Close\n              </Button>\n            </div>\n            :\n            <Button\n                style={{\n                  backgroundColor: \"#18A33C\",\n                  color: \"white\",\n                  width: 240,\n                  }}\n                onClick={() => setshowQR(true)}\n              >\n              Show QR Scanner\n            </Button>\n          )}\n\n\n          <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n            <label style={{color: \"#18A33C\", fontWeight: 'bold',}}>Test Serial Number\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n                <Popup.Header>Test Serial Number</Popup.Header>\n                <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n              </Popup>\n            </label>\n            <div>\n              <Input\n                style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n                icon='hashtag'\n                iconPosition='left'\n                placeholder='Serial Number'\n                value={serial}\n                onChange={(e) => setSerial(e.target.value)}\n              />\n            </div>\n          </Form.Field>\n\n\n\n          <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n          <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Upload Result Image\n            <Popup\n              trigger={\n                <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n              }\n              position='top center'\n            >\n              <Popup.Header>Image</Popup.Header>\n              <Popup.Content>Upload a picture of test result</Popup.Content>\n            </Popup>\n          </label>\n          {showCam ? camera() :\n            <Button\n                style={{\n                  backgroundColor: \"#18A33C\",\n                  color: \"white\",\n                  width: 140,\n                  marginTop: 5\n                  }}\n                onClick={() => setShowCam(true)}\n              >\n              {canClick ? \"Take New\" : \"Take Picture\"}\n            </Button>\n          }\n\n          </Form.Field>\n\n\n          <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n          <div>\n            <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Result\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n                <Popup.Header>Result</Popup.Header>\n                <Popup.Content>Select positive or negative test result</Popup.Content>\n              </Popup>\n            </label>\n          </div>\n            <Radio\n              label={\n                <label style={{color: \"#18A33C\", marginRight: 10}}>Positive\n                </label>}\n              name='radioGroup'\n              value='kp'\n              checked={res === 'positive'}\n              onChange={() => setRes('positive')}\n              />\n              <Radio\n              label={\n                <label style={{color: \"#18A33C\", marginTop: 5}}>Negative\n                </label>}\n                name='radioGroup'\n                value='sig'\n                checked={res === 'negative'}\n                onChange={() => setRes('negative')}\n              />\n              </Form.Field>\n\n\n\n            <div>\n              <Button\n                  style={{\n                    backgroundColor: \"#18A33C\",\n                    color: \"white\",\n                    width: 240,\n                    marginTop: 20\n                    }}\n                  onClick={() => pactContext.endTest(serial, imgHash, (res === 'positive' ? true : false), {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid, imgBlob)}\n                  disabled={(serial === \"\" || res === \"\" || !canClick)}\n                  loading={pactContext.loading}\n                >\n                Post Test Result\n              </Button>\n            </div>\n\n        </Message>\n        </div>\n        </div>\n        </Tab.Pane> },\n\n\n        { menuItem: { key: 'info', icon: 'exchange', content: 'History' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <img src={require(\"../assets/kadena-big.png\")} style={{height:40, marginTop: 0}}/>\n              <Message.Header style={{marginBottom: 10}}>\n                Blockchain Transaction History\n              </Message.Header>\n\n              <History/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n        { menuItem: { key: 'info', icon: 'user md', content: 'Info' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Doctor Information\n              </Message.Header>\n              <DocInfo/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n  ]\n\n  return (\n    <div>\n      <Tab panes={panes} menu={{color:'blue', attached: 'top' }}/>\n    </div>\n  )\n\n}\n\nexport default Tabs;\n\n\n\n\n// <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n\n\n\n\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}