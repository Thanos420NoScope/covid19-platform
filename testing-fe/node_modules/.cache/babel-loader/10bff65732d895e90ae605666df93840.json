{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/QRScan.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader';\n\nconst QRScan = () => {\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, showQR ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(QrReader, {\n    onError: e => console.log(e),\n    onScan: data => {\n      if (data) {\n        setSerial(data);\n        setshowQR(false);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 160,\n      marginTop: 5\n    },\n    onClick: () => setshowQR(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Close Scanner\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default QRScan;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/QRScan.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QrReader","QRScan","showQR","setshowQR","serial","setSerial","marginTop","e","console","log","data","backgroundColor","color","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,MAA3D,QAAyE,OAAzE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,KAAhD,EACGC,KADH,EACUC,MADV,EACkBC,OADlB,EAC2BC,KAD3B,EACkCC,MADlC,EAC0CC,KAD1C,EAEGC,GAFH,EAEQC,QAFR,EAEkBC,MAFlB,QAEgC,mBAFhC;AAGA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAC2B,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAGK,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CADlB;AAEE,IAAA,MAAM,EAAGG,IAAD,IAAU;AAChB,UAAIA,IAAJ,EAAU;AACRL,QAAAA,SAAS,CAACK,IAAD,CAAT;AACAP,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AACLQ,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,KAAK,EAAE,GAHF;AAILP,MAAAA,SAAS,EAAE;AAJN,KADX;AAOI,IAAA,OAAO,EAAE,MAAMH,SAAS,CAAC,KAAD,CAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,CADK,GAwBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADF;AAgCD,CArCD;;AAuCA,eAAeF,MAAf","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'\n\nconst QRScan = () => {\n\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n\n  return (\n    <div style={{marginTop: 20}}>\n      {showQR ?\n        <div>\n          <QrReader\n            onError={(e) => console.log(e)}\n            onScan={(data) => {\n              if (data) {\n                setSerial(data);\n                setshowQR(false);\n              }\n            }}\n          />\n          <Button\n              style={{\n                backgroundColor: \"#18A33C\",\n                color: \"white\",\n                width: 160,\n                marginTop: 5\n                }}\n              onClick={() => setshowQR(false)}\n            >\n            Close Scanner\n          </Button>\n        </div>\n        :\n        <div />\n      }\n\n    </div>\n  )\n\n}\n\nexport default QRScan;\n"]},"metadata":{},"sourceType":"module"}