{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/History.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Segment, Table } from 'semantic-ui-react';\nimport PactCallContext from '../contexts/PactCallContext';\n\nconst History = () => {\n  const pcContext = useContext(PactCallContext);\n  useEffect(() => {\n    // (async () => {\n    //   pcContext.getSavedScans()\n    // })();\n    (async () => {\n      pcContext.updateScans();\n    })();\n  }, []);\n\n  const showDate = item => {\n    const unix = Date.parse(item.test[\"last-mod-time\"][\"timep\"]);\n    const d = new Date(unix);\n    return `${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`;\n  };\n\n  return React.createElement(Segment, {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, pcContext.scans.length !== 0 ? React.createElement(Table, {\n    celled: true,\n    textAlign: \"center\",\n    columns: 4,\n    compact: true,\n    basic: true,\n    padded: true,\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    style: {\n      backgroundColor: \"#054F9E\",\n      opactiy: 0.8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Model\"), React.createElement(Table.HeaderCell, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Brand\"), React.createElement(Table.HeaderCell, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Administered\"), React.createElement(Table.HeaderCell, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Result\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, pcContext.scans.map((s, i) => {\n    return React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, s.test[\"test-manufacturer\"]), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, s.test[\"test-model\"]), React.createElement(Table.Cell, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: s.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, showDate(s))), React.createElement(Table.Cell, {\n      style: {\n        color: s.test[\"test-end-bh\"][\"int\"] === 0 ? 'grey' : s.test[\"result\"] === 'positive' ? 'red' : 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, s.test[\"test-end-bh\"][\"int\"] === 0 ? 'administered' : s.test[\"result\"]));\n  }))) : React.createElement(Header, {\n    as: \"h5\",\n    textAlign: \"center\",\n    style: {\n      color: \"#054F9E\",\n      marginLeft: 40,\n      marginBottom: 20,\n      marginRight: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"No Tests scanned yet!\"), React.createElement(Button, {\n    style: {\n      backgroundColor: \"#054F9E\",\n      color: \"white\",\n      width: 160,\n      marginTop: 5,\n      marginBottom: 5\n    },\n    loading: pcContext.loading,\n    onClick: async () => await pcContext.updateScans(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"refresh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" Refresh\")));\n};\n\nexport default History;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/History.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Segment","Table","PactCallContext","History","pcContext","updateScans","showDate","item","unix","Date","parse","test","d","getDate","getMonth","getFullYear","margin","marginTop","scans","length","backgroundColor","opactiy","color","map","s","i","url","marginLeft","marginBottom","marginRight","width","loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Segment, Table } from 'semantic-ui-react';\nimport PactCallContext from '../contexts/PactCallContext'\n\nconst History = () => {\n\n  const pcContext = useContext(PactCallContext);\n\n  useEffect(() => {\n     // (async () => {\n     //   pcContext.getSavedScans()\n     // })();\n     (async () => {\n       pcContext.updateScans()\n     })();\n   }, []);\n\n  const showDate = (item) => {\n    const unix = Date.parse(item.test[\"last-mod-time\"][\"timep\"])\n    const d = new Date(unix)\n    return `${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`\n  }\n\n\n  return (\n    <Segment style={{ margin: 10 }}>\n      <div style={{marginTop: 10}}>\n      {pcContext.scans.length !== 0\n      ?\n        <Table celled textAlign='center' columns={4} compact basic padded striped>\n\n          <Table.Header color='blue'>\n            <Table.Row style={{backgroundColor: \"#054F9E\", opactiy: 0.8}}>\n              <Table.HeaderCell style={{color:'white'}}>Model</Table.HeaderCell>\n              <Table.HeaderCell style={{color:'white'}}>Brand</Table.HeaderCell>\n              <Table.HeaderCell style={{color:'white'}}>Administered</Table.HeaderCell>\n              <Table.HeaderCell style={{color:'white'}}>Result</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n\n          <Table.Body>\n            {(pcContext.scans.map((s, i) => {\n              return (\n                <Table.Row>\n                  <Table.Cell>{s.test[\"test-manufacturer\"]}</Table.Cell>\n                  <Table.Cell>{s.test[\"test-model\"]}</Table.Cell>\n                  <Table.Cell negative>\n                    <a href={s.url}>\n                      {showDate(s)}\n                    </a>\n                  </Table.Cell>\n                  <Table.Cell style={{color: (s.test[\"test-end-bh\"][\"int\"] === 0 ? 'grey' : (s.test[\"result\"] === 'positive' ? 'red' : 'green'))}}>\n                    {(s.test[\"test-end-bh\"][\"int\"] === 0 ? 'administered' : s.test[\"result\"])}\n                  </Table.Cell>\n                </Table.Row>\n              )\n            }))}\n          </Table.Body>\n        </Table>\n        :\n        <Header as='h5'  textAlign='center' style={{color: \"#054F9E\", marginLeft: 40, marginBottom: 20, marginRight: 40}}>\n          No Tests scanned yet!\n        </Header>\n        }\n        <Button\n            style={{\n              backgroundColor: \"#054F9E\",\n              color: \"white\",\n              width: 160,\n              marginTop: 5,\n              marginBottom: 5\n              }}\n            loading={pcContext.loading}\n            onClick={async () => await pcContext.updateScans()}\n          >\n          <Icon name='refresh' /> Refresh\n        </Button>\n      </div>\n    </Segment>\n  )\n\n}\n\nexport default History;\n"]},"metadata":{},"sourceType":"module"}