{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/TXSuccess.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\nimport PactCallContext from '../contexts/PactCallContext';\n\nconst TXSuccess = props => {\n  const pcContext = useContext(PactCallContext);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Message, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, `Test Successfully ${props.title[0].toUpperCase()}${props.title.slice(1)}!`), React.createElement(\"div\", {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.title === \"administered\" ? `Test administed and recorded permanently on Kadena mainnet. Please have patient scan the QR Code to have a record of his test` : `Test administed and recorded permanently on Kadena mainnet. Patient can access record from QR Code shown when test was admininstered`), React.createElement(\"a\", {\n    href: `https://explorer.chainweb.com/testnet/chain/${props.chainId}/tx/${pcContext.txData.reqKey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Kadena Block Explorer Link\"), props.title === \"administered\" ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(QRCode, {\n    value: `https://explorer.chainweb.com/testnet/chain/${props.chainId}/tx/${pcContext.txData.reqKey}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      backgroundColor: \"#054F9E\",\n      color: \"white\",\n      width: 240,\n      marginTop: 15\n    },\n    onClick: () => pcContext.setScreen('welcome'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Done\")));\n};\n\nexport default TXSuccess;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/TXSuccess.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QRCode","PactCallContext","TXSuccess","props","pcContext","marginBottom","title","toUpperCase","slice","chainId","txData","reqKey","backgroundColor","color","width","marginTop","setScreen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,MAA3D,QAAyE,OAAzE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,KAAhD,EACGC,KADH,EACUC,MADV,EACkBC,OADlB,EAC2BC,KAD3B,EACkCC,MADlC,EAC0CC,KAD1C,EAEGC,GAFH,EAEQC,QAFR,EAEkBC,MAFlB,QAEgC,mBAFhC;AAGA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAE3B,QAAMC,SAAS,GAAGvB,UAAU,CAACoB,eAAD,CAA5B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAY,EAAE;AAAf,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,qBAAoBF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeC,WAAf,EAA6B,GAAEJ,KAAK,CAACG,KAAN,CAAYE,KAAZ,CAAkB,CAAlB,CAAqB,GAD5E,CADF,EAII;AAAK,IAAA,KAAK,EAAE;AAACH,MAAAA,YAAY,EAAE;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACG,KAAN,KAAgB,cAAhB,GACC,+HADD,GAEC,sIAHL,CAJJ,EASI;AAAG,IAAA,IAAI,EAAG,+CAA8CH,KAAK,CAACM,OAAQ,OAAML,SAAS,CAACM,MAAV,CAAiBC,MAAO,EAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCATJ,EAYMR,KAAK,CAACG,KAAN,KAAgB,cAAhB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,+CAA8CH,KAAK,CAACM,OAAQ,OAAML,SAAS,CAACM,MAAV,CAAiBC,MAAO,EAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,GAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBN,EAiBI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,KAAK,EAAE,GAHF;AAILC,MAAAA,SAAS,EAAE;AAJN,KADX;AAOI,IAAA,OAAO,EAAE,MAAMX,SAAS,CAACY,SAAV,CAAoB,SAApB,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,CADA,CADF;AAmCD,CAvCD;;AAyCA,eAAed,SAAf","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react'\nimport PactCallContext from '../contexts/PactCallContext'\n\nconst TXSuccess = (props) => {\n\n  const pcContext = useContext(PactCallContext);\n\n  return (\n    <div>\n    <Message color='blue'>\n      <Message.Header style={{marginBottom: 10}}>\n        {`Test Successfully ${props.title[0].toUpperCase()}${props.title.slice(1)}!`}\n      </Message.Header>\n        <div style={{marginBottom: 5}}>\n          {(props.title === \"administered\" ?\n            `Test administed and recorded permanently on Kadena mainnet. Please have patient scan the QR Code to have a record of his test`\n          : `Test administed and recorded permanently on Kadena mainnet. Patient can access record from QR Code shown when test was admininstered`)}\n        </div>\n        <a href={`https://explorer.chainweb.com/testnet/chain/${props.chainId}/tx/${pcContext.txData.reqKey}`}>\n          Kadena Block Explorer Link\n        </a>\n        {(props.title === \"administered\" ?\n          <div>\n            <QRCode value={`https://explorer.chainweb.com/testnet/chain/${props.chainId}/tx/${pcContext.txData.reqKey}`}/>\n          </div>\n        : <div></div>)}\n        <Button\n            style={{\n              backgroundColor: \"#054F9E\",\n              color: \"white\",\n              width: 240,\n              marginTop: 15\n              }}\n            onClick={() => pcContext.setScreen('welcome')}\n          >\n          Done\n        </Button>\n    </Message>\n\n    </div>\n  )\n\n}\n\nexport default TXSuccess;\n"]},"metadata":{},"sourceType":"module"}