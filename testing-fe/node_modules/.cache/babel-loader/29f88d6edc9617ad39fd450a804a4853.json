{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'; // import Camera from 'react-html5-camera-photo';\n\nimport { Camera } from 'react-cam'; // import Webcam from \"react-webcam\";\n\nimport PactContext from '../contexts/PactContext';\nimport AuthContext from '../contexts/AuthContext';\nimport DocInfo from './DocInfo';\nimport History from './History';\nimport ScanTab from './ScanTab';\n\nvar hash = require('object-hash');\n\nconst Tabs = () => {\n  const pactContext = useContext(PactContext);\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n\n    fetchDoc();\n  }, []);\n  const panes = [{\n    menuItem: {\n      key: 'init',\n      icon: 'qrcode',\n      content: 'Scan'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Scan QR Code\"), React.createElement(ScanTab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'exchange',\n      content: 'History'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Blockchain Transaction History\"), React.createElement(History, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'user md',\n      content: 'Info'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Doctor Information\"), React.createElement(DocInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    panes: panes,\n    menu: {\n      color: 'green',\n      attached: 'top'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default Tabs; // <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QrReader","Camera","PactContext","AuthContext","DocInfo","History","ScanTab","hash","require","Tabs","pactContext","authContext","fetchDoc","fetchDocInfo","docUuid","panes","menuItem","key","icon","content","render","marginBottom","color","attached"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'\n// import Camera from 'react-html5-camera-photo';\nimport { Camera } from 'react-cam';\n// import Webcam from \"react-webcam\";\nimport PactContext from '../contexts/PactContext'\nimport AuthContext from '../contexts/AuthContext'\nimport DocInfo from './DocInfo';\nimport History from './History';\nimport ScanTab from './ScanTab';\n\nvar hash = require('object-hash');\n\n\nconst Tabs = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n    fetchDoc()\n  }, []);\n\n\n  const panes = [\n    { menuItem: { key: 'init', icon: 'qrcode', content: 'Scan' }, render: () => <Tab.Pane>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Scan QR Code\n              </Message.Header>\n                <ScanTab />\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n        { menuItem: { key: 'info', icon: 'exchange', content: 'History' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Blockchain Transaction History\n              </Message.Header>\n              <History/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n        { menuItem: { key: 'info', icon: 'user md', content: 'Info' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Doctor Information\n              </Message.Header>\n              <DocInfo/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n  ]\n\n  return (\n    <div>\n      <Tab panes={panes} menu={{color:'green', attached: 'top' }}/>\n    </div>\n  )\n\n}\n\nexport default Tabs;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n\n\n\n\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}