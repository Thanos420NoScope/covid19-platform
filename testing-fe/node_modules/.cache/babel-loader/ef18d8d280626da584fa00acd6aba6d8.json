{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/EndRecord.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport { Camera } from 'react-cam';\nimport PactCallContext from '../contexts/PactCallContext';\n\nvar hash = require('object-hash');\n\nconst EndRecord = props => {\n  const pcContext = useContext(PactCallContext);\n  const [res, setRes] = useState(\"\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      width: \"240px\",\n      margin: \"0 auto\",\n      marginTop: \"10px\",\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\",\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Test Public Key\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Test Public Key\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"This is the PublicKey field printed in your QR code that serves to sign the transaction as a unique identifier\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: \"240px\",\n      marginBottom: 3,\n      marginTop: 5\n    },\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Public Key\",\n    value: props.pubKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))), React.createElement(Form.Field, {\n    style: {\n      width: \"240px\",\n      margin: \"0 auto\",\n      marginTop: \"10px\",\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\",\n      fontWeight: 'bold',\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Result\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Result\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Select positive or negative test result\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    label: React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Positive\"),\n    name: \"rg\",\n    value: \"kp\",\n    checked: res === 'positive',\n    onChange: () => setRes('positive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Radio, {\n    label: React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        marginTop: 5,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Negative\"),\n    name: \"rg\",\n    value: \"sig\",\n    checked: res === 'negative',\n    onChange: () => setRes('negative'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Radio, {\n    label: React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Inconclusive\"),\n    name: \"rg\",\n    value: \"sig\",\n    checked: res === 'inconclusive',\n    onChange: () => setRes('inconclusive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })))), pcContext.loading ? React.createElement(Message, {\n    color: \"blue\",\n    style: {\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Please Do Not Refresh\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"We are posting this transaction on Kadena mainnet\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 240,\n      marginTop: 20\n    },\n    onClick: () => pcContext.endTest(props.pubKey, props.privKey, props.chainId, res),\n    disabled: res === \"\",\n    loading: pcContext.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Post Test Result\")));\n};\n\nexport default EndRecord;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/components/EndRecord.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Camera","PactCallContext","hash","require","EndRecord","props","pcContext","res","setRes","width","margin","marginTop","marginBottom","color","fontWeight","pubKey","marginRight","loading","backgroundColor","endTest","privKey","chainId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport { Camera } from 'react-cam';\nimport PactCallContext from '../contexts/PactCallContext'\n\nvar hash = require('object-hash');\n\n\nconst EndRecord = (props) => {\n\n  const pcContext = useContext(PactCallContext);\n\n  const [res, setRes] = useState(\"\");\n\n  return (\n    <div>\n      <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n        <label style={{color: \"#18A33C\", fontWeight: 'bold',}}>Test Public Key\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n            <Popup.Header>Test Public Key</Popup.Header>\n            <Popup.Content>This is the PublicKey field printed in your QR code that serves to sign the transaction as a unique identifier</Popup.Content>\n          </Popup>\n        </label>\n        <div>\n          <Input\n            style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n            icon='hashtag'\n            iconPosition='left'\n            placeholder='Public Key'\n            value={props.pubKey}\n          />\n        </div>\n      </Form.Field>\n\n\n\n\n      <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n      <div>\n        <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Result\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n            <Popup.Header>Result</Popup.Header>\n            <Popup.Content>Select positive or negative test result</Popup.Content>\n          </Popup>\n        </label>\n      </div>\n        <div>\n          <div>\n          <Radio\n            label={\n              <label style={{color: \"#18A33C\", marginRight: 10}}>Positive\n              </label>}\n            name='rg'\n            value='kp'\n            checked={res === 'positive'}\n            onChange={() => setRes('positive')}\n            />\n            <Radio\n            label={\n              <label style={{color: \"#18A33C\", marginTop: 5, marginRight: 10}}>Negative\n              </label>}\n              name='rg'\n              value='sig'\n              checked={res === 'negative'}\n              onChange={() => setRes('negative')}\n            />\n            </div>\n            <div>\n            <Radio\n            label={\n              <label style={{color: \"#18A33C\", marginTop: 5}}>Inconclusive\n              </label>}\n              name='rg'\n              value='sig'\n              checked={res === 'inconclusive'}\n              onChange={() => setRes('inconclusive')}\n            />\n            </div>\n          </div>\n          </Form.Field>\n\n\n        {pcContext.loading ?\n          <Message color=\"blue\" style={{marginTop:30}} >\n            <Message.Header>\n              Please Do Not Refresh\n            </Message.Header>\n            <div>\n              We are posting this transaction on Kadena mainnet\n            </div>\n          </Message>\n        : <div></div>}\n        <div>\n          <Button\n              style={{\n                backgroundColor: \"#18A33C\",\n                color: \"white\",\n                width: 240,\n                marginTop: 20\n                }}\n              onClick={() => pcContext.endTest(props.pubKey, props.privKey, props.chainId, res)}\n              disabled={(res === \"\")}\n              loading={pcContext.loading}\n            >\n            Post Test Result\n          </Button>\n        </div>\n    </div>\n  )\n\n}\n\nexport default EndRecord\n"]},"metadata":{},"sourceType":"module"}