{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/EndRecord.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\n\nconst EndRecord = props => {\n  const pactContext = useContext(PactContext);\n  const authContext = useContext(AuthContext);\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc));\n    setCanClick(true);\n    setShowCam(false);\n  }\n\n  const cam = useRef(null);\n\n  const camera = () => {\n    return React.createElement(Message, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Camera, {\n      showFocus: true,\n      front: false,\n      capture: capture,\n      ref: cam,\n      width: \"80%\",\n      height: \"auto\",\n      focusWidth: \"80%\",\n      focusHeight: \"60%\",\n      btnColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: img => cam.current.capture(img),\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 140,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Take Picture\")));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      width: \"240px\",\n      margin: \"0 auto\",\n      marginTop: \"10px\",\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\",\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Test Serial Number\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Test Serial Number\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Scan QR code on test or enter number manually\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Input, {\n    style: {\n      width: \"240px\",\n      marginBottom: 3,\n      marginTop: 5\n    },\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Serial Number\",\n    value: props.serial,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(Form.Field, {\n    style: {\n      width: \"240px\",\n      margin: \"0 auto\",\n      marginTop: \"10px\",\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\",\n      fontWeight: 'bold',\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Upload Result Image\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Image\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Upload a picture of test result\"))), showCam ? camera() : React.createElement(Button, {\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 140,\n      marginTop: 5\n    },\n    onClick: () => setShowCam(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, canClick ? \"Take New\" : \"Take Picture\")), React.createElement(Form.Field, {\n    style: {\n      width: \"240px\",\n      margin: \"0 auto\",\n      marginTop: \"10px\",\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\",\n      fontWeight: 'bold',\n      marginBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Result\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Result\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Select positive or negative test result\")))), React.createElement(Radio, {\n    label: React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Positive\"),\n    name: \"rg\",\n    value: \"kp\",\n    checked: res === 'positive',\n    onChange: () => setRes('positive'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(Radio, {\n    label: React.createElement(\"label\", {\n      style: {\n        color: \"#18A33C\",\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Negative\"),\n    name: \"rg\",\n    value: \"sig\",\n    checked: res === 'negative',\n    onChange: () => setRes('negative'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 240,\n      marginTop: 20\n    },\n    onClick: () => pactContext.endTest(props.serial, imgHash, res === 'positive' ? true : false, {\n      publicKey: authContext.docInfo.public_key,\n      secretKey: authContext.docInfo.private_key\n    }, authContext.docInfo.uuid, imgBlob),\n    disabled: serial === \"\" || res === \"\" || !canClick,\n    loading: pactContext.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Post Test Result\")));\n};\n\nexport default EndRecord; ////CCOMPLETE\n// <div>\n// <div>\n// <Message>\n//   <Message.Header style={{marginBottom: 10}}>\n//     Record COVID-19 Test Result\n//   </Message.Header>\n//\n//   {(showQR ?\n//     <div>\n//       <QrReader\n//         onError={(e) => console.log(e)}\n//         onScan={(data) => {\n//           if (data) {\n//             setSerial(data);\n//             setshowQR(false);\n//           }\n//         }}\n//       />\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 100,\n//             marginTop: 5\n//             }}\n//           onClick={() => setshowQR(false)}\n//         >\n//         Close\n//       </Button>\n//     </div>\n//     :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 240,\n//           }}\n//         onClick={() => setshowQR(true)}\n//       >\n//       Show QR Scanner\n//     </Button>\n//   )}\n//\n//\n//\n// </Message>\n// </div>\n// </div>","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/EndRecord.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","EndRecord","props","pactContext","PactContext","authContext","AuthContext","res","setRes","imgHash","setImgHash","imgBlob","setImgBlob","canClick","setCanClick","showCam","setShowCam","capture","imgSrc","hash","cam","camera","img","current","backgroundColor","color","width","marginTop","margin","marginBottom","fontWeight","serial","marginRight","endTest","publicKey","docInfo","public_key","secretKey","private_key","uuid","loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\n\n\nconst EndRecord = (props) => {\n\n  const pactContext = useContext(PactContext);\n  const authContext = useContext(AuthContext);\n\n\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc))\n    setCanClick(true)\n    setShowCam(false);\n  }\n  const cam = useRef(null);\n\n  const camera = () => {\n    return (\n      <Message color=\"blue\">\n        <Fragment>\n          <Camera\n            showFocus={true}\n            front={false}\n            capture={capture}\n            ref={cam}\n            width=\"80%\"\n            height=\"auto\"\n            focusWidth=\"80%\"\n            focusHeight=\"60%\"\n            btnColor=\"white\"\n          />\n          <Button\n            onClick={img => cam.current.capture(img)}\n            style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 140,\n              marginTop: 10\n              }}\n          >\n            Take Picture\n          </Button>\n        </Fragment>\n      </Message>\n    )\n  }\n\n  return (\n    <div>\n      <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n        <label style={{color: \"#18A33C\", fontWeight: 'bold',}}>Test Serial Number\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n            <Popup.Header>Test Serial Number</Popup.Header>\n            <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n          </Popup>\n        </label>\n        <div>\n          <Input\n            style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n            icon='hashtag'\n            iconPosition='left'\n            placeholder='Serial Number'\n            value={props.serial}\n          />\n        </div>\n      </Form.Field>\n\n\n\n      <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n      <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Upload Result Image\n        <Popup\n          trigger={\n            <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n          }\n          position='top center'\n        >\n          <Popup.Header>Image</Popup.Header>\n          <Popup.Content>Upload a picture of test result</Popup.Content>\n        </Popup>\n      </label>\n      {showCam ? camera() :\n        <Button\n            style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 140,\n              marginTop: 5\n              }}\n            onClick={() => setShowCam(true)}\n          >\n          {canClick ? \"Take New\" : \"Take Picture\"}\n        </Button>\n      }\n\n      </Form.Field>\n\n\n      <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n      <div>\n        <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Result\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n            <Popup.Header>Result</Popup.Header>\n            <Popup.Content>Select positive or negative test result</Popup.Content>\n          </Popup>\n        </label>\n      </div>\n        <Radio\n          label={\n            <label style={{color: \"#18A33C\", marginRight: 10}}>Positive\n            </label>}\n          name='rg'\n          value='kp'\n          checked={res === 'positive'}\n          onChange={() => setRes('positive')}\n          />\n          <Radio\n          label={\n            <label style={{color: \"#18A33C\", marginTop: 5}}>Negative\n            </label>}\n            name='rg'\n            value='sig'\n            checked={res === 'negative'}\n            onChange={() => setRes('negative')}\n          />\n          </Form.Field>\n\n\n\n        <div>\n          <Button\n              style={{\n                backgroundColor: \"#18A33C\",\n                color: \"white\",\n                width: 240,\n                marginTop: 20\n                }}\n              onClick={() => pactContext.endTest(props.serial, imgHash, (res === 'positive' ? true : false), {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid, imgBlob)}\n              disabled={(serial === \"\" || res === \"\" || !canClick)}\n              loading={pactContext.loading}\n            >\n            Post Test Result\n          </Button>\n        </div>\n    </div>\n  )\n\n}\n\nexport default EndRecord\n\n////CCOMPLETE\n// <div>\n// <div>\n// <Message>\n//   <Message.Header style={{marginBottom: 10}}>\n//     Record COVID-19 Test Result\n//   </Message.Header>\n//\n//   {(showQR ?\n//     <div>\n//       <QrReader\n//         onError={(e) => console.log(e)}\n//         onScan={(data) => {\n//           if (data) {\n//             setSerial(data);\n//             setshowQR(false);\n//           }\n//         }}\n//       />\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 100,\n//             marginTop: 5\n//             }}\n//           onClick={() => setshowQR(false)}\n//         >\n//         Close\n//       </Button>\n//     </div>\n//     :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 240,\n//           }}\n//         onClick={() => setshowQR(true)}\n//       >\n//       Show QR Scanner\n//     </Button>\n//   )}\n//\n//\n\n//\n// </Message>\n// </div>\n// </div>\n"]},"metadata":{},"sourceType":"module"}