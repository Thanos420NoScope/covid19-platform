{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'; // import Camera from 'react-html5-camera-photo';\n\nimport { Camera } from 'react-cam'; // import Webcam from \"react-webcam\";\n\nimport PactContext from '../contexts/PactContext';\nimport AuthContext from '../contexts/AuthContext';\nimport DocInfo from './DocInfo';\nimport History from './History';\nimport Scan from './Scan';\n\nvar hash = require('object-hash');\n\nconst Tabs = () => {\n  const pactContext = useContext(PactContext);\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n\n    fetchDoc();\n  }, []);\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n  const ages = [{\n    key: '0',\n    value: '0-10',\n    text: '0-10'\n  }, {\n    key: '1',\n    value: '11-20',\n    text: '11-20'\n  }, {\n    key: '2',\n    value: '21-30',\n    text: '21-30'\n  }, {\n    key: '3',\n    value: '41-50',\n    text: '41-50'\n  }, {\n    key: '4',\n    value: '51-60',\n    text: '51-60'\n  }, {\n    key: '5',\n    value: '61-70',\n    text: '61-70'\n  }, {\n    key: '6',\n    value: '71-80',\n    text: '71-80'\n  }, {\n    key: '7',\n    value: '81-90',\n    text: '81-90'\n  }, {\n    key: '8',\n    value: '91-100',\n    text: '91-100'\n  }];\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc));\n    setCanClick(true);\n    setShowCam(false);\n  }\n\n  const cam = useRef(null);\n\n  const camera = () => {\n    return React.createElement(Message, {\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Camera, {\n      showFocus: true,\n      front: false,\n      capture: capture,\n      ref: cam,\n      width: \"80%\",\n      height: \"auto\",\n      focusWidth: \"80%\",\n      focusHeight: \"60%\",\n      btnColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: img => cam.current.capture(img),\n      style: {\n        backgroundColor: \"#18A33C\",\n        color: \"white\",\n        width: 140,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Take Picture\")));\n  };\n\n  const panes = [{\n    menuItem: {\n      key: 'init',\n      icon: 'qrcode',\n      content: 'Scan'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../assets/kadena-big.png\"),\n      style: {\n        height: 40,\n        marginTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Scan QR Code\"), React.createElement(Scan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'exchange',\n      content: 'History'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../assets/kadena-big.png\"),\n      style: {\n        height: 40,\n        marginTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Blockchain Transaction History\"), React.createElement(History, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))))\n  }, {\n    menuItem: {\n      key: 'info',\n      icon: 'user md',\n      content: 'Info'\n    },\n    render: () => React.createElement(Tab.Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Doctor Information\"), React.createElement(DocInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))))\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    panes: panes,\n    menu: {\n      color: 'blue',\n      attached: 'top'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n};\n\nexport default Tabs; ///INITIALIZE\n// <div>\n//   <div>\n//     <Message>\n//       <Message.Header style={{marginBottom: 10}}>\n//         Administer COVID-19 Test\n//       </Message.Header>\n//       {(showQR ?\n//         <div>\n//           <QrReader\n//             onError={(e) => console.log(e)}\n//             onScan={(data) => {\n//               if (data) {\n//                 setSerial(data);\n//                 setshowQR(false);\n//               }\n//             }}\n//           />\n//           <Button\n//               style={{\n//                 backgroundColor: \"#18A33C\",\n//                 color: \"white\",\n//                 width: 100,\n//                 marginTop: 5\n//                 }}\n//               onClick={() => setshowQR(false)}\n//             >\n//             Close\n//           </Button>\n//         </div>\n//         :\n//         <Button\n//             style={{\n//               backgroundColor: \"#18A33C\",\n//               color: \"white\",\n//               width: 240,\n//               }}\n//             onClick={() => setshowQR(true)}\n//           >\n//           Show QR Scanner\n//         </Button>\n//       )}\n//\n//\n//       <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//         <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 20}}>Test Serial Number\n//           <Popup\n//             trigger={\n//               <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//             }\n//             position='top center'\n//           >\n//             <Popup.Header>Test Serial Number</Popup.Header>\n//             <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n//           </Popup>\n//         </label>\n//         <div>\n//           <Input\n//             style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n//             icon='hashtag'\n//             iconPosition='left'\n//             placeholder='Serial Number'\n//             value={serial}\n//             onChange={(e) => setSerial(e.target.value)}\n//           />\n//         </div>\n//       </Form.Field>\n//\n//\n//\n//       <Form.Field style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\"}}>\n//         <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Age Group\n//           <Popup\n//             trigger={\n//               <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//             }\n//             position='top center'\n//           >\n//             <Popup.Header>Age Group</Popup.Header>\n//             <Popup.Content>Select the age range of the patient</Popup.Content>\n//           </Popup>\n//         </label>\n//         <Select\n//           style={{width:\"240px\", marginTop: 5}}\n//           placeholder='Age Group'\n//           options={ages}\n//           onChange={(e, { value }) => setAge(value)}\n//         />\n//     </Form.Field>\n//\n//\n//       <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//       <div>\n//       <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Gender\n//         <Popup\n//           trigger={\n//             <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//           }\n//           position='top center'\n//         >\n//           <Popup.Header>Gender</Popup.Header>\n//           <Popup.Content>Select Gender of patient</Popup.Content>\n//         </Popup>\n//       </label>\n//       </div>\n//         <Radio\n//           label={\n//             <label style={{color: \"#18A33C\", marginRight: 10, marginTop: 5}}>Male\n//             </label>}\n//           name='radioGroup'\n//           value='kp'\n//           checked={sex === 'male'}\n//           onChange={() => setSex('male')}\n//           />\n//           <Radio\n//           label={\n//             <label style={{color: \"#18A33C\", marginRight: 10}}>Female\n//             </label>}\n//             name='radioGroup'\n//             value='sig'\n//             checked={sex === 'female'}\n//             onChange={() => setSex('female')}\n//           />\n//           <Radio\n//           label={\n//             <label style={{color: \"#18A33C\"}}>Other\n//             </label>}\n//             name='radioGroup'\n//             value='sig'\n//             checked={sex === 'other'}\n//             onChange={() => setSex('other')}\n//           />\n//           </Form.Field>\n//           <div>\n//             <Button\n//                 style={{\n//                   backgroundColor: \"#18A33C\",\n//                   color: \"white\",\n//                   width: 240,\n//                   marginTop: 20\n//                   }}\n//                 onClick={() => pactContext.initTest(age, sex, serial, {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid)}\n//                 disabled={(sex === \"\" || serial === \"\" || age === \"\")}\n//                 loading={pactContext.loading}\n//               >\n//               Administer Test\n//             </Button>\n//           </div>\n//     </Message>\n//   </div>\n// </div>\n////CCOMPLETE\n// <div>\n// <div>\n// <Message>\n//   <Message.Header style={{marginBottom: 10}}>\n//     Record COVID-19 Test Result\n//   </Message.Header>\n//\n//   {(showQR ?\n//     <div>\n//       <QrReader\n//         onError={(e) => console.log(e)}\n//         onScan={(data) => {\n//           if (data) {\n//             setSerial(data);\n//             setshowQR(false);\n//           }\n//         }}\n//       />\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 100,\n//             marginTop: 5\n//             }}\n//           onClick={() => setshowQR(false)}\n//         >\n//         Close\n//       </Button>\n//     </div>\n//     :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 240,\n//           }}\n//         onClick={() => setshowQR(true)}\n//       >\n//       Show QR Scanner\n//     </Button>\n//   )}\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//     <label style={{color: \"#18A33C\", fontWeight: 'bold',}}>Test Serial Number\n//       <Popup\n//         trigger={\n//           <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//         }\n//         position='top center'\n//       >\n//         <Popup.Header>Test Serial Number</Popup.Header>\n//         <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n//       </Popup>\n//     </label>\n//     <div>\n//       <Input\n//         style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n//         icon='hashtag'\n//         iconPosition='left'\n//         placeholder='Serial Number'\n//         value={serial}\n//         onChange={(e) => setSerial(e.target.value)}\n//       />\n//     </div>\n//   </Form.Field>\n//\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//   <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Upload Result Image\n//     <Popup\n//       trigger={\n//         <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//       }\n//       position='top center'\n//     >\n//       <Popup.Header>Image</Popup.Header>\n//       <Popup.Content>Upload a picture of test result</Popup.Content>\n//     </Popup>\n//   </label>\n//   {showCam ? camera() :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 140,\n//           marginTop: 5\n//           }}\n//         onClick={() => setShowCam(true)}\n//       >\n//       {canClick ? \"Take New\" : \"Take Picture\"}\n//     </Button>\n//   }\n//\n//   </Form.Field>\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//   <div>\n//     <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Result\n//       <Popup\n//         trigger={\n//           <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//         }\n//         position='top center'\n//       >\n//         <Popup.Header>Result</Popup.Header>\n//         <Popup.Content>Select positive or negative test result</Popup.Content>\n//       </Popup>\n//     </label>\n//   </div>\n//     <Radio\n//       label={\n//         <label style={{color: \"#18A33C\", marginRight: 10}}>Positive\n//         </label>}\n//       name='radioGroup'\n//       value='kp'\n//       checked={res === 'positive'}\n//       onChange={() => setRes('positive')}\n//       />\n//       <Radio\n//       label={\n//         <label style={{color: \"#18A33C\", marginTop: 5}}>Negative\n//         </label>}\n//         name='radioGroup'\n//         value='sig'\n//         checked={res === 'negative'}\n//         onChange={() => setRes('negative')}\n//       />\n//       </Form.Field>\n//\n//\n//\n//     <div>\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 240,\n//             marginTop: 20\n//             }}\n//           onClick={() => pactContext.endTest(serial, imgHash, (res === 'positive' ? true : false), {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid, imgBlob)}\n//           disabled={(serial === \"\" || res === \"\" || !canClick)}\n//           loading={pactContext.loading}\n//         >\n//         Post Test Result\n//       </Button>\n//     </div>\n//\n// </Message>\n// </div>\n// </div>\n// <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/Tabs.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QrReader","Camera","PactContext","AuthContext","DocInfo","History","Scan","hash","require","Tabs","pactContext","authContext","fetchDoc","fetchDocInfo","docUuid","showQR","setshowQR","serial","setSerial","age","setAge","sex","setSex","res","setRes","imgHash","setImgHash","imgBlob","setImgBlob","canClick","setCanClick","showCam","setShowCam","ages","key","value","text","capture","imgSrc","cam","camera","img","current","backgroundColor","color","width","marginTop","panes","menuItem","icon","content","render","height","marginBottom","attached"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'\n// import Camera from 'react-html5-camera-photo';\nimport { Camera } from 'react-cam';\n// import Webcam from \"react-webcam\";\nimport PactContext from '../contexts/PactContext'\nimport AuthContext from '../contexts/AuthContext'\nimport DocInfo from './DocInfo';\nimport History from './History';\nimport Scan from './Scan';\n\nvar hash = require('object-hash');\n\n\nconst Tabs = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    async function fetchDoc() {\n      await authContext.fetchDocInfo(authContext.docUuid);\n    }\n    fetchDoc()\n  }, []);\n\n\n  const [showQR, setshowQR] = useState(false);\n  const [serial, setSerial] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [imgHash, setImgHash] = useState(\"\");\n  const [imgBlob, setImgBlob] = useState(\"\");\n  const [canClick, setCanClick] = useState(false);\n  const [showCam, setShowCam] = useState(false);\n\n  const ages = [\n      { key: '0', value: '0-10', text: '0-10' },\n      { key: '1', value: '11-20', text: '11-20' },\n      { key: '2', value: '21-30', text: '21-30' },\n      { key: '3', value: '41-50', text: '41-50' },\n      { key: '4', value: '51-60', text: '51-60' },\n      { key: '5', value: '61-70', text: '61-70' },\n      { key: '6', value: '71-80', text: '71-80' },\n      { key: '7', value: '81-90', text: '81-90' },\n      { key: '8', value: '91-100', text: '91-100' },\n    ]\n\n\n  function capture(imgSrc) {\n    setImgBlob(imgSrc);\n    setImgHash(hash(imgSrc))\n    setCanClick(true)\n    setShowCam(false);\n  }\n  const cam = useRef(null);\n\n  const camera = () => {\n    return (\n      <Message color=\"blue\">\n        <Fragment>\n          <Camera\n            showFocus={true}\n            front={false}\n            capture={capture}\n            ref={cam}\n            width=\"80%\"\n            height=\"auto\"\n            focusWidth=\"80%\"\n            focusHeight=\"60%\"\n            btnColor=\"white\"\n          />\n          <Button\n            onClick={img => cam.current.capture(img)}\n            style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 140,\n              marginTop: 10\n              }}\n          >\n            Take Picture\n          </Button>\n        </Fragment>\n      </Message>\n    )\n  }\n\n  const panes = [\n    { menuItem: { key: 'init', icon: 'qrcode', content: 'Scan' }, render: () => <Tab.Pane>\n          <div>\n            <Message>\n              <img src={require(\"../assets/kadena-big.png\")} style={{height:40, marginTop: 0}}/>\n              <Message.Header style={{marginBottom: 10}}>\n                Scan QR Code\n              </Message.Header>\n                <Scan />\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n        { menuItem: { key: 'info', icon: 'exchange', content: 'History' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <img src={require(\"../assets/kadena-big.png\")} style={{height:40, marginTop: 0}}/>\n              <Message.Header style={{marginBottom: 10}}>\n                Blockchain Transaction History\n              </Message.Header>\n              <History/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n        { menuItem: { key: 'info', icon: 'user md', content: 'Info' }, render: () =>\n        <Tab.Pane>\n          <div>\n            <Message>\n              <Message.Header style={{marginBottom: 10}}>\n                Doctor Information\n              </Message.Header>\n              <DocInfo/>\n            </Message>\n          </div>\n        </Tab.Pane> },\n\n  ]\n\n  return (\n    <div>\n      <Tab panes={panes} menu={{color:'blue', attached: 'top' }}/>\n    </div>\n  )\n\n}\n\nexport default Tabs;\n\n\n///INITIALIZE\n// <div>\n//   <div>\n//     <Message>\n//       <Message.Header style={{marginBottom: 10}}>\n//         Administer COVID-19 Test\n//       </Message.Header>\n//       {(showQR ?\n//         <div>\n//           <QrReader\n//             onError={(e) => console.log(e)}\n//             onScan={(data) => {\n//               if (data) {\n//                 setSerial(data);\n//                 setshowQR(false);\n//               }\n//             }}\n//           />\n//           <Button\n//               style={{\n//                 backgroundColor: \"#18A33C\",\n//                 color: \"white\",\n//                 width: 100,\n//                 marginTop: 5\n//                 }}\n//               onClick={() => setshowQR(false)}\n//             >\n//             Close\n//           </Button>\n//         </div>\n//         :\n//         <Button\n//             style={{\n//               backgroundColor: \"#18A33C\",\n//               color: \"white\",\n//               width: 240,\n//               }}\n//             onClick={() => setshowQR(true)}\n//           >\n//           Show QR Scanner\n//         </Button>\n//       )}\n//\n//\n//       <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//         <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 20}}>Test Serial Number\n//           <Popup\n//             trigger={\n//               <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//             }\n//             position='top center'\n//           >\n//             <Popup.Header>Test Serial Number</Popup.Header>\n//             <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n//           </Popup>\n//         </label>\n//         <div>\n//           <Input\n//             style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n//             icon='hashtag'\n//             iconPosition='left'\n//             placeholder='Serial Number'\n//             value={serial}\n//             onChange={(e) => setSerial(e.target.value)}\n//           />\n//         </div>\n//       </Form.Field>\n//\n//\n//\n//       <Form.Field style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\"}}>\n//         <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Age Group\n//           <Popup\n//             trigger={\n//               <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//             }\n//             position='top center'\n//           >\n//             <Popup.Header>Age Group</Popup.Header>\n//             <Popup.Content>Select the age range of the patient</Popup.Content>\n//           </Popup>\n//         </label>\n//         <Select\n//           style={{width:\"240px\", marginTop: 5}}\n//           placeholder='Age Group'\n//           options={ages}\n//           onChange={(e, { value }) => setAge(value)}\n//         />\n//     </Form.Field>\n//\n//\n//       <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//       <div>\n//       <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 10}}>Gender\n//         <Popup\n//           trigger={\n//             <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//           }\n//           position='top center'\n//         >\n//           <Popup.Header>Gender</Popup.Header>\n//           <Popup.Content>Select Gender of patient</Popup.Content>\n//         </Popup>\n//       </label>\n//       </div>\n//         <Radio\n//           label={\n//             <label style={{color: \"#18A33C\", marginRight: 10, marginTop: 5}}>Male\n//             </label>}\n//           name='radioGroup'\n//           value='kp'\n//           checked={sex === 'male'}\n//           onChange={() => setSex('male')}\n//           />\n//           <Radio\n//           label={\n//             <label style={{color: \"#18A33C\", marginRight: 10}}>Female\n//             </label>}\n//             name='radioGroup'\n//             value='sig'\n//             checked={sex === 'female'}\n//             onChange={() => setSex('female')}\n//           />\n//           <Radio\n//           label={\n//             <label style={{color: \"#18A33C\"}}>Other\n//             </label>}\n//             name='radioGroup'\n//             value='sig'\n//             checked={sex === 'other'}\n//             onChange={() => setSex('other')}\n//           />\n//           </Form.Field>\n//           <div>\n//             <Button\n//                 style={{\n//                   backgroundColor: \"#18A33C\",\n//                   color: \"white\",\n//                   width: 240,\n//                   marginTop: 20\n//                   }}\n//                 onClick={() => pactContext.initTest(age, sex, serial, {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid)}\n//                 disabled={(sex === \"\" || serial === \"\" || age === \"\")}\n//                 loading={pactContext.loading}\n//               >\n//               Administer Test\n//             </Button>\n//           </div>\n//     </Message>\n//   </div>\n// </div>\n\n\n\n\n\n////CCOMPLETE\n// <div>\n// <div>\n// <Message>\n//   <Message.Header style={{marginBottom: 10}}>\n//     Record COVID-19 Test Result\n//   </Message.Header>\n//\n//   {(showQR ?\n//     <div>\n//       <QrReader\n//         onError={(e) => console.log(e)}\n//         onScan={(data) => {\n//           if (data) {\n//             setSerial(data);\n//             setshowQR(false);\n//           }\n//         }}\n//       />\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 100,\n//             marginTop: 5\n//             }}\n//           onClick={() => setshowQR(false)}\n//         >\n//         Close\n//       </Button>\n//     </div>\n//     :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 240,\n//           }}\n//         onClick={() => setshowQR(true)}\n//       >\n//       Show QR Scanner\n//     </Button>\n//   )}\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//     <label style={{color: \"#18A33C\", fontWeight: 'bold',}}>Test Serial Number\n//       <Popup\n//         trigger={\n//           <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//         }\n//         position='top center'\n//       >\n//         <Popup.Header>Test Serial Number</Popup.Header>\n//         <Popup.Content>Scan QR code on test or enter number manually</Popup.Content>\n//       </Popup>\n//     </label>\n//     <div>\n//       <Input\n//         style={{width:\"240px\", marginBottom: 3, marginTop: 5}}\n//         icon='hashtag'\n//         iconPosition='left'\n//         placeholder='Serial Number'\n//         value={serial}\n//         onChange={(e) => setSerial(e.target.value)}\n//       />\n//     </div>\n//   </Form.Field>\n//\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//   <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Upload Result Image\n//     <Popup\n//       trigger={\n//         <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//       }\n//       position='top center'\n//     >\n//       <Popup.Header>Image</Popup.Header>\n//       <Popup.Content>Upload a picture of test result</Popup.Content>\n//     </Popup>\n//   </label>\n//   {showCam ? camera() :\n//     <Button\n//         style={{\n//           backgroundColor: \"#18A33C\",\n//           color: \"white\",\n//           width: 140,\n//           marginTop: 5\n//           }}\n//         onClick={() => setShowCam(true)}\n//       >\n//       {canClick ? \"Take New\" : \"Take Picture\"}\n//     </Button>\n//   }\n//\n//   </Form.Field>\n//\n//\n//   <Form.Field  style={{width:\"240px\", margin: \"0 auto\", marginTop: \"10px\", marginBottom: 0}} >\n//   <div>\n//     <label style={{color: \"#18A33C\", fontWeight: 'bold', marginBottom: 0}}>Result\n//       <Popup\n//         trigger={\n//           <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n//         }\n//         position='top center'\n//       >\n//         <Popup.Header>Result</Popup.Header>\n//         <Popup.Content>Select positive or negative test result</Popup.Content>\n//       </Popup>\n//     </label>\n//   </div>\n//     <Radio\n//       label={\n//         <label style={{color: \"#18A33C\", marginRight: 10}}>Positive\n//         </label>}\n//       name='radioGroup'\n//       value='kp'\n//       checked={res === 'positive'}\n//       onChange={() => setRes('positive')}\n//       />\n//       <Radio\n//       label={\n//         <label style={{color: \"#18A33C\", marginTop: 5}}>Negative\n//         </label>}\n//         name='radioGroup'\n//         value='sig'\n//         checked={res === 'negative'}\n//         onChange={() => setRes('negative')}\n//       />\n//       </Form.Field>\n//\n//\n//\n//     <div>\n//       <Button\n//           style={{\n//             backgroundColor: \"#18A33C\",\n//             color: \"white\",\n//             width: 240,\n//             marginTop: 20\n//             }}\n//           onClick={() => pactContext.endTest(serial, imgHash, (res === 'positive' ? true : false), {publicKey: authContext.docInfo.public_key, secretKey: authContext.docInfo.private_key}, authContext.docInfo.uuid, imgBlob)}\n//           disabled={(serial === \"\" || res === \"\" || !canClick)}\n//           loading={pactContext.loading}\n//         >\n//         Post Test Result\n//       </Button>\n//     </div>\n//\n// </Message>\n// </div>\n// </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// <input\n//   style={{marginTop: 5, width: \"270px\", flex: 1, marginTop: 5}}\n//   id=\"to-pub-file\"\n//   type=\"file\"\n//   onChange={(e) => loadImg()}\n//   />\n\n// const cam = useRef(null);\n// function capture(imgSrc) {\n// console.log(imgSrc);\n// }\n\n// <Fragment>\n//   <Camera\n//     showFocus={true}\n//     front={false}\n//     capture={capture}\n//     ref={cam}\n//     width=\"80%\"\n//     height=\"auto\"\n//     focusWidth=\"80%\"\n//     focusHeight=\"60%\"\n//     btnColor=\"white\"\n//   />\n//   <button onClick={img => cam.current.capture(img)}>Take image</button>\n// </Fragment>\n\n\n\n\n// function loadImg(){\n//     try {\n//       var file = document.getElementById(\"to-pub-file\").files[0];\n//       const fileType = file['type'];\n//       const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n//       if (!validImageTypes.includes(fileType)) {\n//           setCanClick(false)\n//           alert(\"you must upload an image\")\n//       }\n//       else {\n//         var fileReader = new FileReader();\n//         fileReader.onload = function(fileLoadedEvent){\n//             var textFromFileLoaded = fileLoadedEvent.target.result;\n//             var arr = new Uint8Array(textFromFileLoaded)\n//             setImgBlob(JSON.stringify(arr))\n//             const hashI = hash(arr);\n//             setImgHash(hashI);\n//             setCanClick(true)\n//         };\n//         fileReader.readAsArrayBuffer(file, \"UTF-8\");\n//       }\n//\n//     } catch (err) {\n//       console.log(err)\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}