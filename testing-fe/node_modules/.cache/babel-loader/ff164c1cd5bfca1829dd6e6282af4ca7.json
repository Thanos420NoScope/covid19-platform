{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/QRShow.js\";\nimport React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\n\nconst QRShow = () => {\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Message, {\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(QRCode, {\n    value: \"some-public-key-gets-read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(Message, {\n    color: \"yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Last Test Time:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"2020 March 20, 12:32\")), React.createElement(Message, {\n    color: \"olive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Result:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Negative\")));\n};\n\nexport default QRShow;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/src/components/QRShow.js"],"names":["React","useState","useEffect","useContext","Fragment","useRef","Button","Grid","Input","Icon","Form","List","Label","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","QRCode","QRShow","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2DC,MAA3D,QAAyE,OAAzE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgDC,KAAhD,EACGC,KADH,EACUC,MADV,EACkBC,OADlB,EAC2BC,KAD3B,EACkCC,MADlC,EAC0CC,KAD1C,EAEGC,GAFH,EAEQC,QAFR,EAEkBC,MAFlB,QAEgC,mBAFhC;AAGA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEnB,SACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF,EAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CAJF,EAYE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAZF,CADF;AAwBD,CA1BD;;AA4BA,eAAeD,MAAf","sourcesContent":["import React, { useState, useEffect, useContext, Fragment, useRef } from 'react';\nimport { Button, Grid, Input, Icon, Form, List, Label,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react'\n\nconst QRShow = () => {\n\n  return (\n    <div style={{marginTop: 20}}>\n      <Message color=\"black\">\n       <QRCode value=\"some-public-key-gets-read\"/>\n      </Message>\n      <Message color=\"yellow\">\n        <Message.Header>\n          Last Test Time:\n        </Message.Header>\n        <div>\n          2020 March 20, 12:32\n        </div>\n      </Message>\n      <Message color=\"olive\">\n        <Message.Header>\n          Result:\n        </Message.Header>\n        <div>\n          Negative\n        </div>\n      </Message>\n    </div>\n  )\n\n}\n\nexport default QRShow;\n"]},"metadata":{},"sourceType":"module"}