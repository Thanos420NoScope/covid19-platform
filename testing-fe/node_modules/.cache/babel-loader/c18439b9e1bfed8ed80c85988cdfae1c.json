{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/contexts/PactCallContext.js\";\nimport React from 'react';\nimport Pact from 'pact-lang-api';\n\nvar hash = require('object-hash');\n\nconst keys = require('../config.json');\n\nconst Context = React.createContext();\nconst hosts = [\"us1\", \"us2\"];\n\nconst createAPIHost = (network, chainId) => `https://${network}.testnet.chainweb.com/chainweb/0.0/testnet04/chain/${chainId}/pact`;\n\nexport class PactCallStore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getTest = async pubKey => {\n      const res = await Pact.fetch.local({\n        networkId: \"testnet04\",\n        pactCode: `(user.rymedi-covid.get-record ${JSON.stringify(pubKey)})`,\n        keyPairs: [{ ...keys.rymediKeys,\n          clist: {\n            name: \"coin.GAS\",\n            args: []\n          }\n        }],\n        meta: Pact.lang.mkMeta(\"dummy-local\", \"0\", 0.00000001, 10000, Math.round(new Date().getTime() / 1000) - 15, 28800)\n      }, createAPIHost(hosts[0], \"0\"));\n      console.log(res);\n    };\n  }\n\n  render() {\n    return React.createElement(Context.Provider, {\n      value: { ...this.state,\n        getTest: this.getTest\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nexport default Context;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-kda/frontend/src/contexts/PactCallContext.js"],"names":["React","Pact","hash","require","keys","Context","createContext","hosts","createAPIHost","network","chainId","PactCallStore","Component","state","getTest","pubKey","res","fetch","local","networkId","pactCode","JSON","stringify","keyPairs","rymediKeys","clist","name","args","meta","lang","mkMeta","Math","round","Date","getTime","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEA,MAAME,OAAO,GAAGL,KAAK,CAACM,aAAN,EAAhB;AAEA,MAAMC,KAAK,GAAG,CAAC,KAAD,EAAQ,KAAR,CAAd;;AACA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAuB,WAAUD,OAAQ,sDAAqDC,OAAQ,OAA5H;;AAEA,OAAO,MAAMC,aAAN,SAA4BX,KAAK,CAACY,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAEjDC,KAFiD,GAEzC,EAFyC;;AAAA,SAMjDC,OANiD,GAMvC,MAAOC,MAAP,IAAkB;AAC1B,YAAMC,GAAG,GAAG,MAAMf,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiB;AAC/BC,QAAAA,SAAS,EAAE,WADoB;AAE/BC,QAAAA,QAAQ,EAAE,iCAAgCC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAuB,GAFlC;AAG/BQ,QAAAA,QAAQ,EAAE,CAAC,EAAC,GAAGnB,IAAI,CAACoB,UAAT;AAAqBC,UAAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAE,UAAP;AAAmBC,YAAAA,IAAI,EAAE;AAAzB;AAA5B,SAAD,CAHqB;AAI/BC,QAAAA,IAAI,EAAE3B,IAAI,CAAC4B,IAAL,CAAUC,MAAV,CAAiB,aAAjB,EAA+B,GAA/B,EAAmC,UAAnC,EAA8C,KAA9C,EAAqDC,IAAI,CAACC,KAAL,CAAY,IAAIC,IAAJ,EAAD,CAAWC,OAAX,KAAqB,IAAhC,IAAsC,EAA3F,EAAgG,KAAhG;AAJyB,OAAjB,EAIiG1B,aAAa,CAACD,KAAK,CAAC,CAAD,CAAN,EAAW,GAAX,CAJ9G,CAAlB;AAKA4B,MAAAA,OAAO,CAACC,GAAR,CAAYpB,GAAZ;AACD,KAbgD;AAAA;;AAejDqB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD,CAAS,QAAT;AACE,MAAA,KAAK,EAAE,EACL,GAAG,KAAKxB,KADH;AAELC,QAAAA,OAAO,EAAE,KAAKA;AAFT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKwB,KAAL,CAAWC,QANd,CADF;AAUD;;AA1BgD;AA8BnD,eAAelC,OAAf","sourcesContent":["import React from 'react';\nimport Pact from 'pact-lang-api';\nvar hash = require('object-hash');\nconst keys = require('../config.json')\n\nconst Context = React.createContext();\n\nconst hosts = [\"us1\", \"us2\"]\nconst createAPIHost = (network, chainId) => `https://${network}.testnet.chainweb.com/chainweb/0.0/testnet04/chain/${chainId}/pact`\n\nexport class PactCallStore extends React.Component {\n\n  state = {\n\n  }\n\n  getTest = async (pubKey) => {\n    const res = await Pact.fetch.local({\n        networkId: \"testnet04\",\n        pactCode:`(user.rymedi-covid.get-record ${JSON.stringify(pubKey)})`,\n        keyPairs: [{...keys.rymediKeys, clist: {name: \"coin.GAS\", args: []}}],\n        meta: Pact.lang.mkMeta(\"dummy-local\",\"0\",0.00000001,10000,(Math.round((new Date).getTime()/1000)-15), 28800)}, createAPIHost(hosts[0], \"0\"))\n    console.log(res);\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          getTest: this.getTest\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n\n}\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}