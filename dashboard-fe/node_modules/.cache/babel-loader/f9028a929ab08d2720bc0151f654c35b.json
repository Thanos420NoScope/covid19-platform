{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n  const pactContext = useContext(PactContext);\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toPubLoad(isPub) {\n    try {\n      var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n\n      if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes(isPub ? \"private\" : \"public\")) {\n        alert(`file must be a .kda ${!isPub ? \"private\" : \"public\"} key file`); // document.getElementById(\"to-pub-file\").files = \"\"\n      }\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        var textFromFileLoaded = fileLoadedEvent.target.result; // console.log(textFromFileLoaded)\n\n        if (isPub) {\n          setPubKey(textFromFileLoaded.replace(\"public: \", \"\"));\n        } else {\n          var keys = textFromFileLoaded.split(\"\\n\");\n          setPubKey(keys[0].replace(\"public: \", \"\"));\n          setPrivKey(keys[1].replace(\"secret: \", \"\"));\n        }\n      };\n\n      fileReader.readAsText(fileToLoad, \"UTF-8\");\n    } catch (err) {\n      console.log(err);\n      alert(`file must be a .kda ${!isPub ? \"private\" : \"public\"} key file`);\n    }\n  }\n\n  const is_hexadecimal = str => {\n    const regexp = /^[0-9a-fA-F]+$/;\n    if (regexp.test(str)) return true;else return false;\n  };\n\n  const checkKey = key => {\n    if (key.length !== 64) {\n      return false;\n    } else if (!is_hexadecimal(key)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkText = text => {\n    if (text === \"\") {\n      setError(true);\n      setErrMsg(\"Please to not leave field empty\");\n    } else {\n      setError(false);\n      setErrMsg();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../kadena.png\"),\n    style: {\n      height: 100,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Covid-19 Test QR Generator\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"1. Enter Test Manufacturer Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"What is the Test Manufacturer Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"This is the name of the company to that produces or brands the test\"))), React.createElement(Form.Input, {\n    icon: \"building\",\n    iconPosition: \"left\",\n    placeholder: \"Manufacturer Name\",\n    value: name,\n    onChange: e => {\n      checkText(e.target.value);\n      setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"2. Enter Test Model Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"pencil alternate\",\n    iconPosition: \"left\",\n    placeholder: \"Model Name\",\n    value: model,\n    onChange: e => {\n      checkText(e.target.value);\n      setModel(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"3. Amount of Labels to Print\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Label Amount\",\n    value: num,\n    onChange: e => setNum(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"3. Sign Test Labels on Blockchain\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"What is Signing? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Enter your public and private key provided by Kadena to sign and generate QR codes\"))), React.createElement(Input, {\n    style: {\n      marginBottom: 5\n    },\n    placeholder: \"Public Key\",\n    icon: \"key\",\n    iconPosition: \"left\",\n    value: pubKey,\n    onChange: e => setPubKey(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    style: {\n      marginBottom: 0\n    },\n    placeholder: \"Private Key\",\n    icon: \"lock\",\n    iconPosition: \"left\",\n    value: privKey,\n    onChange: e => setPrivKey(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"to-pub-file\",\n    type: \"file\",\n    onChange: e => toPubLoad(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), error ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"error\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: name === \"\" || model === \"\" || checkKey(pubKey) || checkKey(privKey) || error,\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 340\n    },\n    onClick: () => pactContext.relAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Sign and Generate QR Codes\")))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","PactContext","Home","pactContext","name","setName","model","setModel","num","setNum","pubKey","setPubKey","privKey","setPrivKey","error","setError","errMsg","setErrMsg","toPubLoad","isPub","fileToLoad","document","getElementById","files","substr","length","includes","alert","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","target","result","replace","keys","split","readAsText","err","console","log","is_hexadecimal","str","regexp","test","checkKey","key","checkText","text","require","height","marginBottom","marginTop","textAlign","color","e","value","backgroundColor","width","relAll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n\n  const pactContext = useContext(PactContext);\n\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toPubLoad(isPub){\n   try {\n     var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n     if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes((isPub ? \"private\" : \"public\"))) {\n       alert(`file must be a .kda ${(!isPub ? \"private\" : \"public\")} key file`)\n       // document.getElementById(\"to-pub-file\").files = \"\"\n     }\n     var fileReader = new FileReader();\n     fileReader.onload = function(fileLoadedEvent){\n         var textFromFileLoaded = fileLoadedEvent.target.result;\n         // console.log(textFromFileLoaded)\n         if (isPub) {\n           setPubKey(textFromFileLoaded.replace(\"public: \", \"\"))\n         } else {\n           var keys = textFromFileLoaded.split(\"\\n\");\n           setPubKey(keys[0].replace(\"public: \", \"\"));\n           setPrivKey(keys[1].replace(\"secret: \", \"\"));\n         }\n     };\n     fileReader.readAsText(fileToLoad, \"UTF-8\");\n   } catch (err) {\n     console.log(err)\n     alert(`file must be a .kda ${(!isPub ? \"private\" : \"public\")} key file`)\n   }\n }\n\n const is_hexadecimal = (str) => {\n   const regexp = /^[0-9a-fA-F]+$/;\n   if (regexp.test(str)) return true;\n   else return false;\n  }\n\n const checkKey = (key) => {\n     if (key.length !== 64) {\n         return false\n     } else if (!is_hexadecimal(key)){\n         return false\n     }\n     return true;\n }\n\n const checkText = (text) => {\n   if (text === \"\") {\n     setError(true)\n     setErrMsg(\"Please to not leave field empty\")\n   } else {\n     setError(false)\n     setErrMsg()\n   }\n\n }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={require(\"../kadena.png\")} style={{height:100, marginBottom: 10}}/>\n        <p>\n          Covid-19 Test QR Generator\n        </p>\n        <Form>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>1. Enter Test Manufacturer Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Manufacturer Name? </Popup.Header>\n              <Popup.Content>This is the name of the company to that produces or brands the test</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='building'\n              iconPosition='left'\n              placeholder='Manufacturer Name'\n              value={name}\n              onChange={(e) => {\n                checkText(e.target.value)\n                setName(e.target.value)\n              }}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>2. Enter Test Model Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='pencil alternate'\n              iconPosition='left'\n              placeholder='Model Name'\n              value={model}\n              onChange={(e) => {\n                checkText(e.target.value)\n                setModel(e.target.value)\n              }}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Amount of Labels to Print\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='hashtag'\n              iconPosition='left'\n              placeholder='Label Amount'\n              value={num}\n              onChange={(e) => setNum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Sign Test Labels on Blockchain\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is Signing? </Popup.Header>\n              <Popup.Content>Enter your public and private key provided by Kadena to sign and generate QR codes</Popup.Content>\n              </Popup>\n            </label>\n            <Input\n              style={{marginBottom: 5}}\n              placeholder='Public Key'\n              icon=\"key\"\n              iconPosition=\"left\"\n              value={pubKey}\n              onChange={(e) => setPubKey(e.target.value)}\n            />\n            <Form.Input\n              style={{marginBottom: 0}}\n              placeholder='Private Key'\n              icon=\"lock\"\n              iconPosition=\"left\"\n              value={privKey}\n              onChange={(e) => setPrivKey(e.target.value)}\n            />\n            <div style={{marginBottom: 20}}>\n              <input\n                  id=\"to-pub-file\"\n                  type=\"file\"\n                  onChange={(e) => toPubLoad(false)}/>\n            </div>\n\n          </Form.Field>\n          {error ?\n            <div>\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              error\n            </Form.Field>\n            </div>\n          : <div></div>}\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <Button\n              disabled={name === \"\" || model === \"\" || checkKey(pubKey) || checkKey(privKey) || error}\n              style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 340,\n              }}\n              onClick={() => pactContext.relAll()}\n            >\n              Sign and Generate QR Codes\n            </Button>\n          </Form.Field>\n        </Form>\n\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}