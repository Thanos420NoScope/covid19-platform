{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n  const pactContext = useContext(PactContext);\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../kadena.png\"),\n    style: {\n      height: 100,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Covid-19 Test QR Generator\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"1. Enter Test Manufacturer Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"What is the Test Manufacturer Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"This is the name of the company to that produces or brands the test\"))), React.createElement(Form.Input, {\n    icon: \"building\",\n    iconPosition: \"left\",\n    placeholder: \"Manufacturer Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"2. Enter Test Model Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"pencil alternate\",\n    iconPosition: \"left\",\n    placeholder: \"Model Name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"3. Amount of Labels to Print\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Label Amount\",\n    value: num,\n    onChange: e => setNum(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"3. Press 'Release Allocation'\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"What does this button do? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"It will popup Chainweaver and ask you to sign for your allocation with the key you provided to CoinList\"))), React.createElement(Button // disabled={acct ==}\n  , {\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 340\n    },\n    onClick: () => pactContext.relAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Release Allocation\")))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","PactContext","Home","pactContext","name","setName","model","setModel","num","setNum","require","height","marginBottom","marginTop","textAlign","color","e","target","value","backgroundColor","width","relAll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n\n  const pactContext = useContext(PactContext);\n\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={require(\"../kadena.png\")} style={{height:100, marginBottom: 10}}/>\n        <p>\n          Covid-19 Test QR Generator\n        </p>\n        <Form>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>1. Enter Test Manufacturer Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Manufacturer Name? </Popup.Header>\n              <Popup.Content>This is the name of the company to that produces or brands the test</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='building'\n              iconPosition='left'\n              placeholder='Manufacturer Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>2. Enter Test Model Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='pencil alternate'\n              iconPosition='left'\n              placeholder='Model Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Amount of Labels to Print\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='hashtag'\n              iconPosition='left'\n              placeholder='Label Amount'\n              value={num}\n              onChange={(e) => setNum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Press 'Release Allocation'\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What does this button do? </Popup.Header>\n              <Popup.Content>It will popup Chainweaver and ask you to sign for your allocation with the key you provided to CoinList</Popup.Content>\n              </Popup>\n            </label>\n            <Button\n              // disabled={acct ==}\n              style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 340,\n              }}\n              onClick={() => pactContext.relAll()}\n            >\n              Release Allocation\n            </Button>\n          </Form.Field>\n        </Form>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}