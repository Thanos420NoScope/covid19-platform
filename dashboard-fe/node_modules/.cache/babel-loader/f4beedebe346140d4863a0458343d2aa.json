{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\nimport QRCode from 'qrcode'; // const fs = require('fs')\n\nfunction Home() {\n  function download(data, filename, type) {\n    var file = new Blob([data], {\n      type: type\n    });\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);else {\n      // Others\n      var a = document.createElement(\"a\"),\n          url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  const generateQR = async text => {\n    try {\n      const qr = await QRCode.toDataURL(text);\n      console.log(qr);\n      download(qr, \"qr\", \"image/png;base64\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const pactContext = useContext(PactContext);\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toKeyLoad() {\n    try {\n      var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n\n      if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes(\"public\")) {\n        alert(`file must be a .kda private key file`);\n      }\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        var textFromFileLoaded = fileLoadedEvent.target.result;\n        var keys = textFromFileLoaded.split(\"\\n\");\n        const pub = keys[0].replace(\"public: \", \"\");\n        const priv = keys[1].replace(\"secret: \", \"\");\n        checkKey(pub);\n        checkKey(priv);\n        setPubKey(pub);\n        setPrivKey(priv);\n      };\n\n      fileReader.readAsText(fileToLoad, \"UTF-8\");\n    } catch (err) {\n      console.log(err);\n      alert(`file must be a .kda private key file`);\n    }\n  }\n\n  const is_hexadecimal = str => {\n    const regexp = /^[0-9a-fA-F]+$/;\n    if (regexp.test(str)) return true;else return false;\n  };\n\n  const checkKey = key => {\n    if (key.length !== 64) {\n      setError(true);\n      setErrMsg(\"Key length is invalid\");\n    } else if (!is_hexadecimal(key)) {\n      setError(true);\n      setErrMsg(\"Key format is invalid\");\n    } else {\n      setError(false);\n      setErrMsg(\"\");\n    }\n  };\n\n  const checkText = text => {\n    if (text === \"\") {\n      setError(true);\n      setErrMsg(\"Please to not leave field empty\");\n    } else {\n      setError(false);\n      setErrMsg(\"\");\n    }\n  };\n\n  const checkNum = num => {\n    if (num.match(/^-{0,1}\\d+$/)) {\n      setError(false);\n      setErrMsg(\"\");\n    } else {\n      setError(true);\n      setErrMsg(\"Please enter an integer for the amount of labels\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../kadena.png\"),\n    style: {\n      height: 100,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Covid-19 Test QR Generator\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"1. Enter Test Manufacturer Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"What is the Test Manufacturer Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"This is the name of the company to that produces or brands the test\"))), React.createElement(Form.Input, {\n    icon: \"building\",\n    iconPosition: \"left\",\n    placeholder: \"Manufacturer Name\",\n    value: name,\n    onChange: e => {\n      generateQR('hi');\n      checkText(e.target.value);\n      setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"2. Enter Test Model Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"pencil alternate\",\n    iconPosition: \"left\",\n    placeholder: \"Model Name\",\n    value: model,\n    onChange: e => {\n      checkText(e.target.value);\n      setModel(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"3. Amount of Test Labels to Print\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Label Amount\",\n    value: num,\n    onChange: e => {\n      checkNum(e.target.value);\n      setNum(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"4. Sign Test Labels on Blockchain\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"What is Signing? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Enter your public and private key provided by Kadena to sign and generate QR codes\"))), React.createElement(Input, {\n    style: {\n      marginBottom: 5\n    },\n    placeholder: \"Public Key\",\n    icon: \"key\",\n    iconPosition: \"left\",\n    value: pubKey,\n    onChange: e => {\n      checkKey(e.target.value);\n      setPubKey(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    style: {\n      marginBottom: 0\n    },\n    placeholder: \"Private Key\",\n    icon: \"lock\",\n    iconPosition: \"left\",\n    value: privKey,\n    onChange: e => {\n      checkKey(e.target.value);\n      setPrivKey(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"to-pub-file\",\n    type: \"file\",\n    onChange: e => toKeyLoad(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), error ? React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Message, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Input Error\"), errMsg)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: error || name === \"\" || model === \"\" || pubKey === \"\" || privKey === \"\",\n    loading: pactContext.loading,\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 360\n    },\n    onClick: () => pactContext.registerTests(name, model, num, pubKey, privKey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Sign and Generate QR Codes\")))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","PactContext","QRCode","Home","download","data","filename","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","generateQR","text","qr","toDataURL","console","log","err","error","pactContext","name","setName","model","setModel","num","setNum","pubKey","setPubKey","privKey","setPrivKey","setError","errMsg","setErrMsg","toKeyLoad","fileToLoad","getElementById","files","substr","length","includes","alert","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","target","result","keys","split","pub","replace","priv","checkKey","readAsText","is_hexadecimal","str","regexp","test","key","checkText","checkNum","match","require","height","marginBottom","marginTop","textAlign","color","e","value","loading","backgroundColor","width","registerTests"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nimport QRCode from 'qrcode'\n// const fs = require('fs')\n\n\nfunction Home() {\n\n  function download(data, filename, type) {\n          var file = new Blob([data], {type: type});\n          if (window.navigator.msSaveOrOpenBlob) // IE10+\n              window.navigator.msSaveOrOpenBlob(file, filename);\n          else { // Others\n              var a = document.createElement(\"a\"),\n                      url = URL.createObjectURL(file);\n              a.href = url;\n              a.download = filename;\n              document.body.appendChild(a);\n              a.click();\n              setTimeout(function() {\n                  document.body.removeChild(a);\n                  window.URL.revokeObjectURL(url);\n              }, 0);\n          }\n        }\n\n  const generateQR = async text => {\n  try {\n    const qr = await QRCode.toDataURL(text)\n    console.log(qr)\n    download(qr, \"qr\", \"image/png;base64\")\n  } catch (err) {\n    console.error(err)\n  }\n}\n  const pactContext = useContext(PactContext);\n\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toKeyLoad(){\n   try {\n     var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n     if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes(\"public\")) {\n       alert(`file must be a .kda private key file`)\n     }\n     var fileReader = new FileReader();\n     fileReader.onload = function(fileLoadedEvent){\n         var textFromFileLoaded = fileLoadedEvent.target.result;\n         var keys = textFromFileLoaded.split(\"\\n\");\n         const pub = keys[0].replace(\"public: \", \"\");\n         const priv = keys[1].replace(\"secret: \", \"\")\n         checkKey(pub);\n         checkKey(priv);\n         setPubKey(pub);\n         setPrivKey(priv);\n     };\n     fileReader.readAsText(fileToLoad, \"UTF-8\");\n   } catch (err) {\n     console.log(err)\n     alert(`file must be a .kda private key file`)\n   }\n }\n\n const is_hexadecimal = (str) => {\n   const regexp = /^[0-9a-fA-F]+$/;\n   if (regexp.test(str)) return true;\n   else return false;\n  }\n\n const checkKey = (key) => {\n     if (key.length !== 64) {\n       setError(true)\n       setErrMsg(\"Key length is invalid\")\n     } else if (!is_hexadecimal(key)){\n       setError(true)\n       setErrMsg(\"Key format is invalid\")\n     } else {\n       setError(false)\n       setErrMsg(\"\")\n     }\n\n }\n\n const checkText = (text) => {\n   if (text === \"\") {\n     setError(true)\n     setErrMsg(\"Please to not leave field empty\")\n   } else {\n     setError(false)\n     setErrMsg(\"\")\n   }\n }\n\n const checkNum = (num) => {\n    if(num.match(/^-{0,1}\\d+$/)){\n      setError(false)\n      setErrMsg(\"\")\n    } else {\n      setError(true)\n      setErrMsg(\"Please enter an integer for the amount of labels\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={require(\"../kadena.png\")} style={{height:100, marginBottom: 10}}/>\n        <p>\n          Covid-19 Test QR Generator\n        </p>\n        <Form>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>1. Enter Test Manufacturer Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Manufacturer Name? </Popup.Header>\n              <Popup.Content>This is the name of the company to that produces or brands the test</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='building'\n              iconPosition='left'\n              placeholder='Manufacturer Name'\n              value={name}\n              onChange={(e) => {\n                generateQR('hi')\n                checkText(e.target.value)\n                setName(e.target.value)\n              }}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>2. Enter Test Model Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='pencil alternate'\n              iconPosition='left'\n              placeholder='Model Name'\n              value={model}\n              onChange={(e) => {\n                checkText(e.target.value)\n                setModel(e.target.value)\n              }}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Amount of Test Labels to Print\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is the Test Model Name? </Popup.Header>\n              <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='hashtag'\n              iconPosition='left'\n              placeholder='Label Amount'\n              value={num}\n              onChange={(e) => {\n                checkNum(e.target.value)\n                setNum(e.target.value)\n              }}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>4. Sign Test Labels on Blockchain\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is Signing? </Popup.Header>\n              <Popup.Content>Enter your public and private key provided by Kadena to sign and generate QR codes</Popup.Content>\n              </Popup>\n            </label>\n            <Input\n              style={{marginBottom: 5}}\n              placeholder='Public Key'\n              icon=\"key\"\n              iconPosition=\"left\"\n              value={pubKey}\n              onChange={(e) => {\n                checkKey(e.target.value)\n                setPubKey(e.target.value)\n              }}\n            />\n            <Form.Input\n              style={{marginBottom: 0}}\n              placeholder='Private Key'\n              icon=\"lock\"\n              iconPosition=\"left\"\n              value={privKey}\n              onChange={(e) => {\n                checkKey(e.target.value)\n                setPrivKey(e.target.value)\n              }}\n            />\n            <div style={{marginBottom: 20}}>\n              <input\n                  id=\"to-pub-file\"\n                  type=\"file\"\n                  onChange={(e) => toKeyLoad()}/>\n            </div>\n\n          </Form.Field>\n          {error ?\n            <div style={{marginBottom: 20}}>\n              <Message color='red'>\n                <Message.Header style={{marginBottom: 5}}>\n                  Input Error\n                </Message.Header>\n                {errMsg}\n              </Message>\n            </div>\n          : <div></div>}\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <Button\n              disabled={error || name === \"\" || model === \"\" || pubKey === \"\" || privKey === \"\"}\n              loading={pactContext.loading}\n              style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 360,\n              }}\n              onClick={() => pactContext.registerTests(name, model, num, pubKey, privKey)}\n            >\n              Sign and Generate QR Codes\n            </Button>\n          </Form.Field>\n        </Form>\n\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}