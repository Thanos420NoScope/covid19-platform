{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\nimport QRCode from 'qrcode'; // const fs = require('fs')\n\nfunction Home() {\n  const pactContext = useContext(PactContext);\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toKeyLoad() {\n    try {\n      var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n\n      if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes(\"public\")) {\n        alert(`file must be a .kda private key file`);\n      }\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        var textFromFileLoaded = fileLoadedEvent.target.result;\n        var keys = textFromFileLoaded.split(\"\\n\");\n        const pub = keys[0].replace(\"public: \", \"\");\n        const priv = keys[1].replace(\"secret: \", \"\");\n        checkKey(pub);\n        checkKey(priv);\n        setPubKey(pub);\n        setPrivKey(priv);\n      };\n\n      fileReader.readAsText(fileToLoad, \"UTF-8\");\n    } catch (err) {\n      console.log(err);\n      alert(`file must be a .kda private key file`);\n    }\n  }\n\n  const is_hexadecimal = str => {\n    const regexp = /^[0-9a-fA-F]+$/;\n    if (regexp.test(str)) return true;else return false;\n  };\n\n  const checkKey = key => {\n    if (key.length !== 64) {\n      setError(true);\n      setErrMsg(\"Key length is invalid\");\n    } else if (!is_hexadecimal(key)) {\n      setError(true);\n      setErrMsg(\"Key format is invalid\");\n    } else {\n      setError(false);\n      setErrMsg(\"\");\n    }\n  };\n\n  const checkText = text => {\n    if (text === \"\") {\n      setError(true);\n      setErrMsg(\"Please to not leave field empty\");\n    } else {\n      setError(false);\n      setErrMsg(\"\");\n    }\n  };\n\n  const checkNum = num => {\n    if (num.match(/^-{0,1}\\d+$/)) {\n      setError(false);\n      setErrMsg(\"\");\n    } else {\n      setError(true);\n      setErrMsg(\"Please enter an integer for the amount of labels\");\n    }\n  };\n\n  return React.createElement(Grid, {\n    rows: 2,\n    padded: true,\n    verticalAlign: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../kadena.png\"),\n    style: {\n      height: 100,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Covid-19 Test QR Generator\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"1. Enter Test Manufacturer Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"What is the Test Manufacturer Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"This is the name of the company to that produces or brands the test\"))), React.createElement(Form.Input, {\n    icon: \"building\",\n    iconPosition: \"left\",\n    placeholder: \"Manufacturer Name\",\n    value: name,\n    onChange: e => {\n      checkText(e.target.value);\n      setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"2. Enter Test Model Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"pencil alternate\",\n    iconPosition: \"left\",\n    placeholder: \"Model Name\",\n    value: model,\n    onChange: e => {\n      checkText(e.target.value);\n      setModel(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"3. Amount of Test Labels to Print\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"What is the Test Model Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"This is the name that identifies this type of test within the manufacturer or brand\"))), React.createElement(Form.Input, {\n    icon: \"hashtag\",\n    iconPosition: \"left\",\n    placeholder: \"Label Amount\",\n    value: num,\n    onChange: e => {\n      checkNum(e.target.value);\n      setNum(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"4. Sign Test Labels on Blockchain\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"What is Signing? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Enter your public and private key provided by Kadena to sign and generate QR codes\"))), React.createElement(Input, {\n    style: {\n      marginBottom: 5\n    },\n    placeholder: \"Public Key\",\n    icon: \"key\",\n    iconPosition: \"left\",\n    value: pubKey,\n    onChange: e => {\n      checkKey(e.target.value);\n      setPubKey(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    style: {\n      marginBottom: 0\n    },\n    placeholder: \"Private Key\",\n    icon: \"lock\",\n    iconPosition: \"left\",\n    value: privKey,\n    onChange: e => {\n      checkKey(e.target.value);\n      setPrivKey(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"to-pub-file\",\n    type: \"file\",\n    onChange: e => toKeyLoad(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }))), error ? React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Message, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Input Error\"), errMsg)) : pactContext.loading ? React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Message, {\n    color: \"green\",\n    style: {\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    style: {\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Please Do Not Refresh\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"We are registering the test labels on Kadena mainnet\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: error || name === \"\" || model === \"\" || pubKey === \"\" || privKey === \"\",\n    loading: pactContext.loading,\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 360\n    },\n    onClick: () => pactContext.registerTests(name, model, num, pubKey, privKey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Sign and Generate QR Codes\")))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/covid19-dashboard/src/components/Home.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","PactContext","QRCode","Home","pactContext","name","setName","model","setModel","num","setNum","pubKey","setPubKey","privKey","setPrivKey","error","setError","errMsg","setErrMsg","toKeyLoad","fileToLoad","document","getElementById","files","substr","length","includes","alert","fileReader","FileReader","onload","fileLoadedEvent","textFromFileLoaded","target","result","keys","split","pub","replace","priv","checkKey","readAsText","err","console","log","is_hexadecimal","str","regexp","test","key","checkText","text","checkNum","match","require","height","marginBottom","marginTop","textAlign","color","e","value","loading","backgroundColor","width","registerTests"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nimport QRCode from 'qrcode'\n// const fs = require('fs')\n\n\nfunction Home() {\n\n  const pactContext = useContext(PactContext);\n\n  const [name, setName] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [pubKey, setPubKey] = useState(\"\");\n  const [privKey, setPrivKey] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  function toKeyLoad(){\n   try {\n     var fileToLoad = document.getElementById(\"to-pub-file\").files[0];\n     if (fileToLoad.name.substr(fileToLoad.name.length - 4) !== \".kda\" || fileToLoad.name.includes(\"public\")) {\n       alert(`file must be a .kda private key file`)\n     }\n     var fileReader = new FileReader();\n     fileReader.onload = function(fileLoadedEvent){\n         var textFromFileLoaded = fileLoadedEvent.target.result;\n         var keys = textFromFileLoaded.split(\"\\n\");\n         const pub = keys[0].replace(\"public: \", \"\");\n         const priv = keys[1].replace(\"secret: \", \"\")\n         checkKey(pub);\n         checkKey(priv);\n         setPubKey(pub);\n         setPrivKey(priv);\n     };\n     fileReader.readAsText(fileToLoad, \"UTF-8\");\n   } catch (err) {\n     console.log(err)\n     alert(`file must be a .kda private key file`)\n   }\n }\n\n const is_hexadecimal = (str) => {\n   const regexp = /^[0-9a-fA-F]+$/;\n   if (regexp.test(str)) return true;\n   else return false;\n  }\n\n const checkKey = (key) => {\n     if (key.length !== 64) {\n       setError(true)\n       setErrMsg(\"Key length is invalid\")\n     } else if (!is_hexadecimal(key)){\n       setError(true)\n       setErrMsg(\"Key format is invalid\")\n     } else {\n       setError(false)\n       setErrMsg(\"\")\n     }\n\n }\n\n const checkText = (text) => {\n   if (text === \"\") {\n     setError(true)\n     setErrMsg(\"Please to not leave field empty\")\n   } else {\n     setError(false)\n     setErrMsg(\"\")\n   }\n }\n\n const checkNum = (num) => {\n    if(num.match(/^-{0,1}\\d+$/)){\n      setError(false)\n      setErrMsg(\"\")\n    } else {\n      setError(true)\n      setErrMsg(\"Please enter an integer for the amount of labels\")\n    }\n  }\n\n  return (\n    <Grid rows={2} padded verticalAlign=\"top\">\n      <Grid.Row>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={require(\"../kadena.png\")} style={{height:100, marginBottom: 10}}/>\n          <p>\n            Covid-19 Test QR Generator\n          </p>\n          <Form>\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              <label style={{color: \"#18A33C\" }}>1. Enter Test Manufacturer Name\n                <Popup\n                  trigger={\n                    <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                  }\n                  position='top center'\n                >\n                <Popup.Header>What is the Test Manufacturer Name? </Popup.Header>\n                <Popup.Content>This is the name of the company to that produces or brands the test</Popup.Content>\n                </Popup>\n              </label>\n              <Form.Input\n                icon='building'\n                iconPosition='left'\n                placeholder='Manufacturer Name'\n                value={name}\n                onChange={(e) => {\n                  checkText(e.target.value)\n                  setName(e.target.value)\n                }}\n              />\n            </Form.Field>\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              <label style={{color: \"#18A33C\" }}>2. Enter Test Model Name\n                <Popup\n                  trigger={\n                    <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                  }\n                  position='top center'\n                >\n                <Popup.Header>What is the Test Model Name? </Popup.Header>\n                <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n                </Popup>\n              </label>\n              <Form.Input\n                icon='pencil alternate'\n                iconPosition='left'\n                placeholder='Model Name'\n                value={model}\n                onChange={(e) => {\n                  checkText(e.target.value)\n                  setModel(e.target.value)\n                }}\n              />\n            </Form.Field>\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              <label style={{color: \"#18A33C\" }}>3. Amount of Test Labels to Print\n                <Popup\n                  trigger={\n                    <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                  }\n                  position='top center'\n                >\n                <Popup.Header>What is the Test Model Name? </Popup.Header>\n                <Popup.Content>This is the name that identifies this type of test within the manufacturer or brand</Popup.Content>\n                </Popup>\n              </label>\n              <Form.Input\n                icon='hashtag'\n                iconPosition='left'\n                placeholder='Label Amount'\n                value={num}\n                onChange={(e) => {\n                  checkNum(e.target.value)\n                  setNum(e.target.value)\n                }}\n              />\n            </Form.Field>\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              <label style={{color: \"#18A33C\" }}>4. Sign Test Labels on Blockchain\n                <Popup\n                  trigger={\n                    <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                  }\n                  position='top center'\n                >\n                <Popup.Header>What is Signing? </Popup.Header>\n                <Popup.Content>Enter your public and private key provided by Kadena to sign and generate QR codes</Popup.Content>\n                </Popup>\n              </label>\n              <Input\n                style={{marginBottom: 5}}\n                placeholder='Public Key'\n                icon=\"key\"\n                iconPosition=\"left\"\n                value={pubKey}\n                onChange={(e) => {\n                  checkKey(e.target.value)\n                  setPubKey(e.target.value)\n                }}\n              />\n              <Form.Input\n                style={{marginBottom: 0}}\n                placeholder='Private Key'\n                icon=\"lock\"\n                iconPosition=\"left\"\n                value={privKey}\n                onChange={(e) => {\n                  checkKey(e.target.value)\n                  setPrivKey(e.target.value)\n                }}\n              />\n              <div style={{marginBottom: 20}}>\n                <input\n                    id=\"to-pub-file\"\n                    type=\"file\"\n                    onChange={(e) => toKeyLoad()}/>\n              </div>\n\n            </Form.Field>\n            {error ?\n              <div style={{marginBottom: 20}}>\n                <Message color='red'>\n                  <Message.Header style={{marginBottom: 5}}>\n                    Input Error\n                  </Message.Header>\n                  {errMsg}\n                </Message>\n              </div>\n            : (pactContext.loading ?\n              <div style={{marginBottom: 20}}>\n                <Message color=\"green\" style={{marginTop:30}} >\n                  <Message.Header style={{marginBottom: 5}}>\n                    Please Do Not Refresh\n                  </Message.Header>\n                  <div>\n                    We are registering the test labels on Kadena mainnet\n                  </div>\n                </Message>\n              </div>\n              : <div></div>)}\n            <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n              <Button\n                disabled={error || name === \"\" || model === \"\" || pubKey === \"\" || privKey === \"\"}\n                loading={pactContext.loading}\n                style={{\n                backgroundColor: \"#18A33C\",\n                color: \"white\",\n                width: 360,\n                }}\n                onClick={() => pactContext.registerTests(name, model, num, pubKey, privKey)}\n              >\n                Sign and Generate QR Codes\n              </Button>\n            </Form.Field>\n          </Form>\n\n        </header>\n      </div>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}