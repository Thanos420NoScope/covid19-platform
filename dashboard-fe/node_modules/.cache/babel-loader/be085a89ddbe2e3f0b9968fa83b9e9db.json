{"ast":null,"code":"var _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/allocations/src/components/Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n  const pactContext = useContext(PactContext);\n  const [acct, setAcct] = useState(\"\");\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../kadena.png\"),\n    style: {\n      height: 100,\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Investor Allocation Release Platform\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"1. Enter Your Allocation Account Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"What is an Allocation Account Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Kadena provides an account for each month of vesting named similarly to \\\"SA <1>_2\\\" \\u2014each month has a unique identifier. Please make sure there\\u2019s a space before the \\\"<\\\"\"))), React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Account Name\",\n    value: acct,\n    onChange: e => setAcct(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"2. Have Chainweaver wallet app open\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"What is Chainweaver? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"You should already have our Chainweaver wallet downloaded as you used it to generate a public key to provide to CoinList\")))), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"3. Press 'Release Allocation'\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"What does this button do? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"It will popup Chainweaver and ask you to sign for your allocation with the key you provided to CoinList\"))), React.createElement(Button, {\n    disabled: acct === \"\",\n    style: {\n      backgroundColor: \"#18A33C\",\n      color: \"white\",\n      width: 340\n    },\n    onClick: () => pactContext.relAll(acct),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Release Allocation\")), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"4. Sign Transaction\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"How do I sign for this transaction?\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"In the Chainweaver popup, press 'Next' then ONLY check the box with the public key you provided to CoinList under the 'unrestrcited signing' section (leave the GAS dropdown blank). Then press 'Next' and 'Submit'\")))), React.createElement(Form.Field, {\n    style: {\n      marginTop: \"0px\",\n      marginBottom: 10,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#18A33C\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"5. Wait for funds to reach the account\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Why do I need to wait?\"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"The block must be mined in order for the funds to transfer. This will take 30 seconds to 2 minutes\")))))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/allocations/src/components/Home.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","PactContext","Home","pactContext","acct","setAcct","require","height","marginBottom","marginTop","textAlign","color","e","target","value","backgroundColor","width","relAll"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EACGC,KADH,EACUC,MADV,EACkBC,OADlB,EAC2BC,KAD3B,EACkCC,MADlC,EAC0CC,KAD1C,EAEGC,GAFH,EAEQC,QAFR,EAEkBC,MAFlB,QAEgC,mBAFhC;AAGA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,SAASC,IAAT,GAAgB;AAEd,QAAMC,WAAW,GAAGlB,UAAU,CAACgB,WAAD,CAA9B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEuB,OAAO,CAAC,eAAD,CAAjB;AAAoC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,GAAR;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,YAAY,EAAE,EAAjC;AAAqCE,MAAAA,SAAS,EAAE;AAAhD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6LAPA,CADF,CADF,EAYE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,KAAK,EAAEP,IAJT;AAKE,IAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,EAqBE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACL,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,YAAY,EAAE,EAAjC;AAAqCE,MAAAA,SAAS,EAAE;AAAhD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAPA,CADF,CADF,CArBF,EAkCE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,YAAY,EAAE,EAAjC;AAAqCE,MAAAA,SAAS,EAAE;AAAhD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAPA,CADF,CADF,EAYE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEP,IAAI,KAAK,EADrB;AAEE,IAAA,KAAK,EAAE;AACPW,MAAAA,eAAe,EAAE,SADV;AAEPJ,MAAAA,KAAK,EAAE,OAFA;AAGPK,MAAAA,KAAK,EAAE;AAHA,KAFT;AAOE,IAAA,OAAO,EAAE,MAAMb,WAAW,CAACc,MAAZ,CAAmBb,IAAnB,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,CAlCF,EA0DE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACK,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,YAAY,EAAE,EAAjC;AAAqCE,MAAAA,SAAS,EAAE;AAAhD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2NAPA,CADF,CADF,CA1DF,EAuEE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAS,EAAE,KAAZ;AAAmBD,MAAAA,YAAY,EAAE,EAAjC;AAAqCE,MAAAA,SAAS,EAAE;AAAhD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAPA,CADF,CADF,CAvEF,CALF,CADF,CADF;AA+FD;;AAED,eAAeT,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nfunction Home() {\n\n  const pactContext = useContext(PactContext);\n\n  const [acct, setAcct] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={require(\"../kadena.png\")} style={{height:100, marginBottom: 10}}/>\n        <p>\n          Investor Allocation Release Platform\n        </p>\n        <Form>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>1. Enter Your Allocation Account Name\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is an Allocation Account Name? </Popup.Header>\n              <Popup.Content>Kadena provides an account for each month of vesting named similarly to \"SA &lt;1&gt;_2\" —each month has a unique identifier. Please make sure there’s a space before the \"&lt;\"</Popup.Content>\n              </Popup>\n            </label>\n            <Form.Input\n              icon='user'\n              iconPosition='left'\n              placeholder='Account Name'\n              value={acct}\n              onChange={(e) => setAcct(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>2. Have Chainweaver wallet app open\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is Chainweaver? </Popup.Header>\n              <Popup.Content>You should already have our Chainweaver wallet downloaded as you used it to generate a public key to provide to CoinList</Popup.Content>\n              </Popup>\n            </label>\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>3. Press 'Release Allocation'\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What does this button do? </Popup.Header>\n              <Popup.Content>It will popup Chainweaver and ask you to sign for your allocation with the key you provided to CoinList</Popup.Content>\n              </Popup>\n            </label>\n            <Button\n              disabled={acct === \"\"}\n              style={{\n              backgroundColor: \"#18A33C\",\n              color: \"white\",\n              width: 340,\n              }}\n              onClick={() => pactContext.relAll(acct)}\n            >\n              Release Allocation\n            </Button>\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>4. Sign Transaction\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>How do I sign for this transaction?</Popup.Header>\n              <Popup.Content>In the Chainweaver popup, press 'Next' then ONLY check the box with the public key you provided to CoinList under the 'unrestrcited signing' section (leave the GAS dropdown blank). Then press 'Next' and 'Submit'</Popup.Content>\n              </Popup>\n            </label>\n          </Form.Field>\n          <Form.Field  style={{marginTop: \"0px\", marginBottom: 10, textAlign: \"left\"}} >\n            <label style={{color: \"#18A33C\" }}>5. Wait for funds to reach the account\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>Why do I need to wait?</Popup.Header>\n              <Popup.Content>The block must be mined in order for the funds to transfer. This will take 30 seconds to 2 minutes</Popup.Content>\n              </Popup>\n            </label>\n          </Form.Field>\n        </Form>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}